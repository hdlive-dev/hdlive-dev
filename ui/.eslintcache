[{"/root/Development/hdlivedev/ui/src/index.js":"1","/root/Development/hdlivedev/ui/src/layouts/Admin.js":"2","/root/Development/hdlivedev/ui/src/layouts/Temp.js":"3","/root/Development/hdlivedev/ui/src/layouts/Auth.js":"4","/root/Development/hdlivedev/ui/src/routes.js":"5","/root/Development/hdlivedev/ui/src/components/Navbars/AuthNavbar.js":"6","/root/Development/hdlivedev/ui/src/components/Footers/AuthFooter.js":"7","/root/Development/hdlivedev/ui/src/components/Navbars/AdminNavbar.js":"8","/root/Development/hdlivedev/ui/src/components/Footers/AdminFooter.js":"9","/root/Development/hdlivedev/ui/src/components/Sidebar/Sidebar.js":"10","/root/Development/hdlivedev/ui/src/views/Index.js":"11","/root/Development/hdlivedev/ui/src/views/examples/Maps.js":"12","/root/Development/hdlivedev/ui/src/views/examples/Profile.js":"13","/root/Development/hdlivedev/ui/src/views/examples/Login.js":"14","/root/Development/hdlivedev/ui/src/views/examples/Register.js":"15","/root/Development/hdlivedev/ui/src/views/examples/Icons.js":"16","/root/Development/hdlivedev/ui/src/views/examples/ViewUser.js":"17","/root/Development/hdlivedev/ui/src/views/examples/Changepassword.js":"18","/root/Development/hdlivedev/ui/src/views/examples/ViewStream.js":"19","/root/Development/hdlivedev/ui/src/views/examples/CreateStream.js":"20","/root/Development/hdlivedev/ui/src/views/examples/Tables.js":"21","/root/Development/hdlivedev/ui/src/views/examples/CreateStreamPlan.js":"22","/root/Development/hdlivedev/ui/src/views/examples/ViewStreamPlan.js":"23","/root/Development/hdlivedev/ui/src/views/examples/AddStream.js":"24","/root/Development/hdlivedev/ui/src/views/examples/PurchasePlan.js":"25","/root/Development/hdlivedev/ui/src/views/examples/ConfirmPurchasePlan.js":"26","/root/Development/hdlivedev/ui/src/views/examples/ViewPlanPurchase.js":"27","/root/Development/hdlivedev/ui/src/views/examples/TextEditor.js":"28","/root/Development/hdlivedev/ui/src/views/examples/TemplateWelcome.js":"29","/root/Development/hdlivedev/ui/src/components/Headers/Header.js":"30","/root/Development/hdlivedev/ui/src/util/Util.jsx":"31","/root/Development/hdlivedev/ui/src/variables/charts.js":"32","/root/Development/hdlivedev/ui/src/layouts/User.js":"33","/root/Development/hdlivedev/ui/src/layouts/Studio.js":"34","/root/Development/hdlivedev/ui/src/layouts/Reseller.js":"35","/root/Development/hdlivedev/ui/src/components/Navbars/UserNavbar.js":"36"},{"size":1228,"mtime":1615097879738,"results":"37","hashOfConfig":"38"},{"size":2122,"mtime":1615386194016,"results":"39","hashOfConfig":"38"},{"size":1019,"mtime":1612357892000,"results":"40","hashOfConfig":"38"},{"size":2518,"mtime":1615451096513,"results":"41","hashOfConfig":"38"},{"size":6213,"mtime":1615386305372,"results":"42","hashOfConfig":"38"},{"size":3317,"mtime":1612014706000,"results":"43","hashOfConfig":"38"},{"size":1770,"mtime":1612014706000,"results":"44","hashOfConfig":"38"},{"size":3330,"mtime":1615451209829,"results":"45","hashOfConfig":"38"},{"size":1699,"mtime":1612014706000,"results":"46","hashOfConfig":"38"},{"size":9397,"mtime":1613127468000,"results":"47","hashOfConfig":"38"},{"size":11788,"mtime":1612014706000,"results":"48","hashOfConfig":"38"},{"size":2839,"mtime":1612020548000,"results":"49","hashOfConfig":"38"},{"size":19603,"mtime":1612071266000,"results":"50","hashOfConfig":"38"},{"size":7742,"mtime":1612014708000,"results":"51","hashOfConfig":"38"},{"size":10588,"mtime":1612014708000,"results":"52","hashOfConfig":"38"},{"size":21178,"mtime":1615094632828,"results":"53","hashOfConfig":"38"},{"size":4250,"mtime":1614409289121,"results":"54","hashOfConfig":"38"},{"size":6580,"mtime":1612014706000,"results":"55","hashOfConfig":"38"},{"size":4503,"mtime":1612963288000,"results":"56","hashOfConfig":"38"},{"size":11216,"mtime":1612014706000,"results":"57","hashOfConfig":"38"},{"size":70221,"mtime":1612014708000,"results":"58","hashOfConfig":"38"},{"size":11381,"mtime":1615096504503,"results":"59","hashOfConfig":"38"},{"size":4364,"mtime":1613127046000,"results":"60","hashOfConfig":"38"},{"size":21195,"mtime":1614445486363,"results":"61","hashOfConfig":"38"},{"size":10001,"mtime":1613127046000,"results":"62","hashOfConfig":"38"},{"size":9539,"mtime":1613127046000,"results":"63","hashOfConfig":"38"},{"size":6719,"mtime":1613127046000,"results":"64","hashOfConfig":"38"},{"size":4783,"mtime":1615099081330,"results":"65","hashOfConfig":"38"},{"size":13294,"mtime":1612956704000,"results":"66","hashOfConfig":"38"},{"size":5877,"mtime":1612014706000,"results":"67","hashOfConfig":"38"},{"size":1686,"mtime":1615023564245,"results":"68","hashOfConfig":"38"},{"size":10036,"mtime":1615523787087,"results":"69","hashOfConfig":"38"},{"size":2166,"mtime":1615526284866,"results":"70","hashOfConfig":"38"},{"size":2082,"mtime":1615097727564,"results":"71","hashOfConfig":"38"},{"size":2080,"mtime":1615097693927,"results":"72","hashOfConfig":"38"},{"size":4407,"mtime":1615451164051,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"3li449",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"76"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"76"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/root/Development/hdlivedev/ui/src/index.js",[],["173","174"],"/root/Development/hdlivedev/ui/src/layouts/Admin.js",["175","176"],"import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\nimport logo from \"assets/img/brand/logo.png\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (localStorage.getItem(\"SESSION_KEY\") == null ||\n        localStorage.getItem(\"SESSION_KEY\") == \"\") {\n        this.props.history.push('/auth');\n      }\n      else if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes.routes[i].layout + routes.routes[i].path\n        ) !== -1\n      ) {\n        return routes.routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes.routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: logo,\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes.routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/root/Development/hdlivedev/ui/src/layouts/Temp.js",["177"],"import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component { \n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/Temp\") {\n        localStorage.clear();         \n        return ( \n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div>               \n          {/* Page content */}\n          <Container>\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/Temp/temp\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n       \n      </>\n    );\n  }\n}\n\nexport default Auth;\n","/root/Development/hdlivedev/ui/src/layouts/Auth.js",[],"/root/Development/hdlivedev/ui/src/routes.js",["178"],"import Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ChangePWD from \"views/examples/Changepassword.js\";\nimport ViewUser from \"views/examples/ViewUser.js\";\nimport AddStream from \"views/examples/AddStream.js\";\nimport ViewStream from \"views/examples/ViewStream.js\";\nimport CreateStream from \"views/examples/CreateStream.js\";\nimport CreateStreamPlan from \"views/examples/CreateStreamPlan.js\";\nimport ViewStreamPlan from \"views/examples/ViewStreamPlan.js\";\nimport ViewPlanPurchase from \"views/examples/ViewPlanPurchase.js\";\nimport PurchasePlan from \"views/examples/PurchasePlan.js\";\nimport ConfirmPurchasePlan from \"views/examples/ConfirmPurchasePlan.js\";\nimport TextEditor from \"views/examples/TextEditor.js\";\nimport Temp from \"views/examples/TemplateWelcome.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/icons\",\n    name: \"Add User Reseller\",\n    icon: \"ni ni-planet text-blue\",\n    component: Icons,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/viewreselleruser\",\n    name: \"View User Reseller\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewUser,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/addstream\",\n    name: \"Update Stream\",\n    icon: \"ni ni-planet text-blue\",\n    component: AddStream,\n    layout: \"/admin\",\n    Inmenu: \"no\"\n  },\n  {\n    path: \"/Createstream\",\n    name: \"Create Stream\",\n    icon: \"ni ni-planet text-blue\",\n    component: CreateStream,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/viewstream\",\n    name: \"View Stream\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewStream,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/CreatestreamPlan\",\n    name: \"Create Plans\",\n    icon: \"ni ni-planet text-blue\",\n    component: CreateStreamPlan,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/viewstreamPlan\",\n    name: \"View Plans\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewStreamPlan,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/ViewPlanPurchase\",\n    name: \"Purchase Plan\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewPlanPurchase,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/PurchasePlan\",\n    name: \"Purchase Plan\",\n    icon: \"ni ni-planet text-blue\",\n    component: PurchasePlan,\n    layout: \"/admin\",\n    Inmenu: \"no\"\n  },\n  {\n    path: \"/ConfirmPurchasePlan\",\n    name: \"Confirm Plan and Do Payment\",\n    icon: \"ni ni-planet text-blue\",\n    component: ConfirmPurchasePlan,\n    layout: \"/admin\",\n    Inmenu: \"no\"\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/Changepassword\",\n    name: \"Change Password\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: ChangePWD,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/tables\",\n    name: \"Tables\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tables,\n    layout: \"/admin\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/textEditor\",\n    name: \"textEditor\",\n    icon: \"ni ni-key-25 text-info\",\n    component: TextEditor,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/temp\",\n    name: \"Stream View\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Temp,\n    layout: \"/Temp\"\n  }\n];\n\nvar userRoutes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/addstream\",\n    name: \"Update Stream\",\n    icon: \"ni ni-planet text-blue\",\n    component: AddStream,\n    layout: \"/user\",\n    Inmenu: \"no\"\n  },\n  {\n    path: \"/Createstream\",\n    name: \"Create Stream\",\n    icon: \"ni ni-planet text-blue\",\n    component: CreateStream,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/viewstream\",\n    name: \"View Stream\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewStream,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/CreatestreamPlan\",\n    name: \"Create Plans\",\n    icon: \"ni ni-planet text-blue\",\n    component: CreateStreamPlan,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/viewstreamPlan\",\n    name: \"View Plans\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewStreamPlan,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/ViewPlanPurchase\",\n    name: \"Purchase Plan\",\n    icon: \"ni ni-planet text-blue\",\n    component: ViewPlanPurchase,\n    layout: \"/user\",\n    Inmenu: \"no\"\n  },\n  {\n    path: \"/PurchasePlan\",\n    name: \"Purchase Plan\",\n    icon: \"ni ni-planet text-blue\",\n    component: PurchasePlan,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/ConfirmPurchasePlan\",\n    name: \"Confirm Plan and Do Payment\",\n    icon: \"ni ni-planet text-blue\",\n    component: ConfirmPurchasePlan,\n    layout: \"/user\",\n    Inmenu: \"no\"\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/Changepassword\",\n    name: \"Change Password\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: ChangePWD,\n    layout: \"/user\",\n    Inmenu: \"yes\"\n  }\n];\n\nvar authRoutes = [\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    Inmenu: \"yes\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    Inmenu: \"yes\"\n  }\n];\nexport default { routes, userRoutes, authRoutes };\n","/root/Development/hdlivedev/ui/src/components/Navbars/AuthNavbar.js",[],"/root/Development/hdlivedev/ui/src/components/Footers/AuthFooter.js",["179"],"import React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2015-2021{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    HDLIVE\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"\"\n                      target=\"_blank\"\n                    >\n                      HDLIVE\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>                  \n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/root/Development/hdlivedev/ui/src/components/Navbars/AdminNavbar.js",[],"/root/Development/hdlivedev/ui/src/components/Footers/AdminFooter.js",["180"],"import React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2015-2021{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"https://www.creative-tim.com?ref=adr-admin-footer\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                HDLIVE\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  HDLIVE\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  About Us\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </NavLink>\n              </NavItem>\n\n            </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/root/Development/hdlivedev/ui/src/components/Sidebar/Sidebar.js",["181","182","183","184","185","186","187","188","189","190","191","192"],"import React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      if(prop.Inmenu==\"yes\")\n      {\n        return (          \n          <NavItem key={key}>\n            <NavLink\n              to={prop.layout + prop.path}\n              tag={NavLinkRRD}\n              onClick={this.closeCollapse}\n              activeClassName=\"active\"\n            >\n              <i className={prop.icon} />\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      }\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            {/* <h6 className=\"navbar-heading text-muted\">Documentation</h6> */}\n            {/* Navigation */}\n            {/* <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/overview?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Getting started\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/colors?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-palette\" />\n                  Foundation\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/alerts?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-ui-04\" />\n                  Components\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem className=\"active-pro active\">\n                <NavLink href=\"https://www.creative-tim.com/product/argon-dashboard-pro-react?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Upgrade to PRO\n                </NavLink>\n              </NavItem>\n            </Nav> */}\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","/root/Development/hdlivedev/ui/src/views/Index.js",[],"/root/Development/hdlivedev/ui/src/views/examples/Maps.js",[],"/root/Development/hdlivedev/ui/src/views/examples/Profile.js",["193","194","195","196"],"import React, { Component } from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\nimport { isWhiteSpaceLike } from \"typescript\";\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\n\nconst HTMLEditor = {\n  backgroundColor: \"white\",\n  height: \"300px\"\n};\n\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      StateDropDown: [],\n      CityDropDown: [],\n      Name_Tx: \"\",\n      Email: \"\",\n      Whatsapp: \"\",\n      Age: 0,\n      Gender: 0,\n      Address: \"\",\n      State_Id: 0,\n      City_Id: 0,\n      PinCode: \"\",\n      Studio: \"\",\n      ResellerName: \"\"\n\n    }\n  }\n  componentDidMount() {\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid })\n    };\n    let stateapiUrl = apiURL() + \"GetState\";\n    fetch(stateapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ StateDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n    let citymasterapiUrl = apiURL() + \"GetCity\";\n    fetch(citymasterapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ CityDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n\n\n    let nextrequestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid })\n    };\n    let defdataapiUrl = apiURL() + \"reguserbyid\";\n    fetch(defdataapiUrl, nextrequestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n          var AfterapiData = AfterapiData2[0];\n          this.setState({ Name_Tx: AfterapiData.NAME_TX });\n          this.setState({ Email: AfterapiData.EMAIL_ID_TX });\n          this.setState({ Whatsapp: AfterapiData.WHATSAPP_NO_TX });\n          this.setState({ Age: AfterapiData.AGE_NM });\n          this.setState({ Gender: AfterapiData.GENDER_NM });\n          this.setState({ Address: AfterapiData.ADDRESS_TX });\n          this.setState({ State_Id: AfterapiData.STATE_ID });\n          this.setState({ City_Id: AfterapiData.CITY_ID });\n          this.setState({ PinCode: AfterapiData.POSTAL_CODE_TX });\n          this.setState({ Studio: AfterapiData.STUDIO_NAME_TX });\n          this.setState({ ResellerName: AfterapiData.RESELLER_NAME_TX });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n  }\n  handleChangeStates = (value) => {\n    this.setState({ State_Id: value })\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ STATE_ID: value, ID: uid })\n    };\n    let stateapiUrl = apiURL() + \"GetCityByState\";\n    fetch(stateapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ CityDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n  }\n\n  doUpdateprofile = () => {\n\n    if (this.state.Name_Tx == \"\") {\n      alert(\"Please input Name\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    else {\n      const updterequestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          Name_Tx: this.state.Name_Tx, Whatsapp: this.state.Whatsapp,\n          Gender: this.state.Gender, Age: this.state.Age, Address: this.state.Address,\n          StateId: this.state.State_Id, CityId: this.state.City_Id, PinCode: this.state.PinCode,\n          Studio: this.state.Studio, Id: uid\n        })\n      };\n      const updateapiUrl = apiURL() + \"UpdateUser\";\n      fetch(updateapiUrl, updterequestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            alert(\"Updated successfully\");\n\n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n\n  render() {\n    let staetsss = this.state.StateDropDown;\n    let optionStateItems = staetsss.map((States) =>\n      <option value={States.ID}>{States.STATE_NAME_TX}</option>\n    );\n    let citiesss = this.state.CityDropDown;\n    let optionCityItems = citiesss.map((City) =>\n      <option value={City.ID}>{City.CITY_NAME_TX}</option>\n    );\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-first-name\"\n                              placeholder=\"Name: john Doe\"\n                              type=\"text\"\n                              onChange={(e) => { this.setState({ Name_Tx: e.target.value }) }}\n                              value={this.state.Name_Tx}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Email Id\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-last-name\"\n                              placeholder=\"Email Id: john@gmail.com\"\n                              type=\"text\"\n                              value={this.state.Email} disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Whatsapp No.\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-username\"\n                              placeholder=\"9999999999\"\n                              type=\"number\"\n                              value={this.state.Whatsapp}\n                              onChange={(e) => { this.setState({ Whatsapp: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Age\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder=\"30\"\n                              type=\"number\"\n                              value={this.state.Age}\n                              onChange={(e) => { this.setState({ Age: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              Gender\n                            </label>\n                            <select className=\"input-group\" value={this.state.Gender} style={DropDown} onChange={(e) => { this.setState({ Gender: e.target.value }) }}>\n                              <option value=\"0\">Select Gender</option>\n                              <option value=\"1\">Male</option>\n                              <option value=\"2\">Female</option>\n                              <option value=\"3\">Transgender</option>\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                              value={this.state.Address}\n                              onChange={(e) => { this.setState({ Address: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"India\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\" disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              State\n                            </label>\n                            <select className=\"input-group\" value={this.state.State_Id} style={DropDown} onChange={(e) => { this.handleChangeStates(e.target.value) }}>\n                              <option value=\"0\">Select State</option>\n                              {optionStateItems}\n                            </select>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              City\n                            </label>\n                            <select className=\"input-group\" value={this.state.City_Id} style={DropDown} onChange={(e) => { this.setState({ City_Id: e.target.value }) }}>\n                              <option value=\"0\">Select City</option>\n                              {optionCityItems}\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                              value={this.state.PinCode}\n                              onChange={(e) => { this.setState({ PinCode: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">Official Information</h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              Studio Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-studio-name\"\n                              placeholder=\"Studio Name: john Studio\"\n                              type=\"text\"\n                              value={this.state.Studio}\n                              onChange={(e) => { this.setState({ Studio: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Reseller Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-reseller-name\"\n                              placeholder=\"Reseller: john d'costa\"\n                              type=\"text\" value={this.state.ResellerName} disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doUpdateprofile()} >\n                          Update\n                   </Button>\n                        {/* <Editor\n                          editorState=\"\"\n                          wrapperClassName=\"demo-wrapper\"\n                          editorClassName=\"demo-editor\"\n                          editorStyle={HTMLEditor}\n                          onEditorStateChange={this.onEditorStateChange}\n                        /> */}\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/Login.js",["197","198","199","200","201","202","203"],"import React from \"react\";\nimport { dataEncrypt, dataDecrypt, genPassword, apiURL } from \"util/Util.jsx\";\nimport { Link } from \"react-router-dom\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport github from \"assets/img/icons/common/github.svg\"\nimport google from \"assets/img/icons/common/google.svg\"\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      UserType: \"0\",\n      username: \"\",\n      pws: \"\"\n    }\n  }\n\n  doLogin = () => {\n    const def_Iv = \"H8Ctcauy/4DhnYyfksuWkw==\";\n    const def_Key = \"0e+B7xdXE4I5p8mqAK9r2ejoAGlVx6Mkb2EuHNOoxkg=\";\n\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    else if (this.state.username == \"\") {\n      alert(\"Please input Username.\");\n    }\n    else if (this.state.pws == \"\") {\n      alert(\"Please input password.\");\n    }\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ loginid: this.state.username, userpassword: genPassword(this.state.pws), UserTypeId: this.state.UserType })\n      };\n      const apiUrl = apiURL() + \"login\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            let LoginData = {\n              data: JSON.stringify(reqdata.data),\n              iv: def_Iv,\n              key: def_Key\n            }\n            //console.log(dataDecrypt(LoginData));\n            var AfterLoginData = JSON.parse(dataDecrypt(LoginData));\n            localStorage.setItem('USER_NAME_TX', AfterLoginData.USER_NAME_TX);\n            localStorage.setItem('IVkey', AfterLoginData.USER_ID);\n            localStorage.setItem('SESSION_KEY', AfterLoginData.SESSION_KEY);\n            localStorage.setItem('USER_TYPE_ID', AfterLoginData.USER_TYPE_ID);\n            localStorage.setItem('LOGIN_ID', AfterLoginData.LOGIN_ID);\n            localStorage.setItem('UID', AfterLoginData.ID);\n            this.props.history.push('/admin');\n          }\n          else {\n            //console.log(reqdata.statmsg); \n            alert(reqdata.statmsg);\n          }\n        });\n    }\n  };\n  render() {\n    return (\n      <>\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            {/* <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      // src= {require(\"assets/img/icons/common/github.svg\")}\n                      src={github}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      // src={require(\"assets/img/icons/common/google.svg\")}\n                      src={google}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader> */}\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              {/* <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div> */}\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup>\n                    <select className=\"input-group\" style={DropDown} onChange={(e) => { this.setState({ UserType: e.target.value }) }}>\n                      <option value=\"0\">Select User Type</option>\n                      <option value=\"1\">Admin</option>\n                      <option value=\"3\">User</option>\n                      <option value=\"2\">Reseller</option>\n                      <option value=\"4\">Studio</option>\n                    </select>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\"\n                      onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"\n                      onChange={(e) => { this.setState({ pws: e.target.value }) }} />\n                  </InputGroup>\n                </FormGroup>\n                {/* <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div> */}\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doLogin()}>\n                    Sign in\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              {/* <a\n                className=\"text-light\"\n                href=\"/auth/register\"\n              >\n                <small>Create new account</small>\n              </a>\n               */}\n              <Link className=\"text-light\" to=\"/auth/register\"><small>Create new account</small></Link>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/root/Development/hdlivedev/ui/src/views/examples/Register.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],"import React from \"react\";\nimport { genPassword, dataDecrypt, apiURL } from \"util/Util.jsx\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { isBlock } from \"typescript\";\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      UserType: \"0\",\n      password_tx: \"\",\n      Name: \"\",\n      Email: \"\",\n      WhatsappNumber: \"\",\n      ResellerDropDown: [],\n      showElement: false,\n      ResellerId: \"0\"\n    }\n  }\n\n  componentDidMount() {\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: 0 })\n    };\n    let def_Iv = \"H8Ctcauy/4DhnYyfksuWkw==\";\n    let def_Key = \"0e+B7xdXE4I5p8mqAK9r2ejoAGlVx6Mkb2EuHNOoxkg=\";\n    let SlrapiUrl = apiURL() + \"GetSeller\";\n    fetch(SlrapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ ResellerDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n  }\n\n  handleChange = (value) => {\n    this.setState({ UserType: value })\n    if (value == 3)\n      this.setState({ showElement: true })\n    else\n      this.setState({ showElement: false })\n  }\n\n  doRegister = () => {\n    var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    else if (this.state.Name == \"\") {\n      alert(\"Please input Name.\");\n    }\n    else if (this.state.Email == \"\") {\n      alert(\"Please input Email id.\");\n    }\n    else if (!regex.test(this.state.Email)) {\n      alert(\"Please input valid Email id.\");\n    }\n    else if (this.state.WhatsappNumber === \"\") {\n      alert(\"Please input whatsapp number.\");\n    }\n    else if (this.state.WhatsappNumber.length != 10) {\n      alert(\"Please input correct whatsapp number.\");\n    }\n    else if (this.state.password_tx == \"\") {\n      alert(\"Please input password.\");\n    }\n    else if (this.state.password_tx.length < 8) {\n      alert(\"Password length should be more than 8\");\n    }\n    else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n      alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    }\n    else if (!this.state.password_tx.match(/([0-9])/)) {\n      alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    }\n\n    else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n      alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    }\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ NAME_TX: this.state.Name, EMAIL_ID_TX: this.state.Email, USER_TYPE_ID: this.state.UserType, WHATSAPP_NO_TX: this.state.WhatsappNumber, PASSWORD_TX: genPassword(this.state.password_tx), RESELLER_ID: this.state.ResellerId })\n      };\n      const apiUrl = apiURL() +\"register\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            alert(\"Registerd successfully\");\n            this.props.history.push('/auth');\n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n  render() {\n    let resellers = this.state.ResellerDropDown;\n    let optionItems = resellers.map((Reseller) =>\n      <option value={Reseller.ID}>{Reseller.NAME_TX}</option>\n    );\n\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            {/* <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <small>Sign up with</small>\n              </div>\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon mr-4\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader> */}\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                Register\n              </div>\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup>\n                    <select className=\"input-group\" style={DropDown} onChange={(e) => { this.handleChange(e.target.value) }}>\n                      <option value=\"0\">Select User Type</option>\n                      <option value=\"3\">User</option>\n                      <option value=\"2\">Reseller</option>\n                      <option value=\"4\">Studio</option>\n                    </select>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup className={this.state.showElement ? \"d-block\" : \"d-none\"}>\n                  <InputGroup>\n                    <select className=\"input-group\" style={DropDown} onChange={(e) => { this.setState({ ResellerId: e.target.value }) }}>\n                      <option value=\"0\">Select Reseller</option>\n                      {optionItems}\n                    </select>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Name\" type=\"text\" onChange={(e) => { this.setState({ Name: e.target.value }) }} />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" onChange={(e) => { this.setState({ Email: e.target.value }) }} />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-mobile-button\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Whatsapp Number\" min=\"0\" type=\"number\" onChange={(e) => { this.setState({ WhatsappNumber: e.target.value }) }} />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" onChange={(e) => { this.setState({ password_tx: e.target.value }) }} />\n                  </InputGroup>\n                </FormGroup>\n                {/* <div className=\"text-muted font-italic\">\n                  <small>\n                    password strength:{\" \"}\n                    <span className=\"text-success font-weight-700\">strong</span>\n                  </small>\n                </div> */}\n                {/* <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row> */}\n                <div className=\"text-center\">\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\" onClick={() => this.doRegister()}>\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","/root/Development/hdlivedev/ui/src/views/examples/Icons.js",["219","220"],"import React from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      StateDropDown: [],\n      CityDropDown: [],\n      Name_Tx: \"\",\n      Email: \"\",\n      UserTypeId: 0,\n      Whatsapp: \"\",\n      Age: 0,\n      Gender: 0,\n      Address: \"\",\n      State_Id: 0,\n      City_Id: 0,\n      PinCode: \"\",\n      Studio: \"\",\n      ResellerDropDown: [],\n      BoxDropDown: [],\n      Box_Id: 0,\n      Reseller_Id: 0,\n      Website: \"\",\n      IPAddress: \"\",\n      Code: \"\",\n      Amount: 0,\n      ChatCode: \"\"\n    }\n  }\n  componentDidMount() {\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid })\n    };\n    let stateapiUrl = apiURL() + \"GetState\";\n    fetch(stateapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ StateDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n    let citymasterapiUrl = apiURL() + \"GetCity\";\n    fetch(citymasterapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ CityDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n    let boxmasterapiUrl = apiURL() + \"GetBox\";\n    fetch(boxmasterapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ BoxDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n    let resellerapiUrl = apiURL() + \"GetSeller\";\n    fetch(resellerapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ ResellerDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n    // let nextrequestOptions = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({ ID: uid })\n    // };\n    // let defdataapiUrl = 'http://localhost:3020/api/reguserbyid';\n    // fetch(defdataapiUrl, nextrequestOptions)\n    //   .then((response) => response.json())\n    //   .then((reqdata) => {\n    //     if (reqdata.statcode === 200) {\n    //       let apiData = {\n    //         data: JSON.stringify(reqdata.data),\n    //         iv: def_Iv,\n    //         key: def_Key\n    //       }\n    //       var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n    //       var AfterapiData = AfterapiData2[0];\n    //       this.setState({ Name_Tx: AfterapiData.NAME_TX });\n    //       this.setState({ Email: AfterapiData.EMAIL_ID_TX });\n    //       this.setState({ Whatsapp: AfterapiData.WHATSAPP_NO_TX });\n    //       this.setState({ Age: AfterapiData.AGE_NM });\n    //       this.setState({ Gender: AfterapiData.GENDER_NM });\n    //       this.setState({ Address: AfterapiData.ADDRESS_TX });\n    //       this.setState({ State_Id: AfterapiData.STATE_ID });\n    //       this.setState({ City_Id: AfterapiData.CITY_ID });\n    //       this.setState({ PinCode: AfterapiData.POSTAL_CODE_TX });\n    //       this.setState({ Studio: AfterapiData.STUDIO_NAME_TX });\n    //       this.setState({ ResellerName: AfterapiData.RESELLER_NAME_TX });\n    //     }\n    //     else {\n    //       alert(reqdata.statmsg);\n    //     }\n    //   });\n  }\n\n  handleChangeStates = (value) => {\n    this.setState({ State_Id: value })\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ STATE_ID: value, ID: uid })\n    };\n    let stateapiUrl = apiURL() + \"GetCityByState\";\n    fetch(stateapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          this.setState({ CityDropDown: AfterapiData });\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n  }\n\n  doAddReseller = () => {\n    if (this.state.Name_Tx == \"\") {\n      alert(\"Please input Name\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    else {\n      const updterequestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          NAME_TX: this.state.Name_Tx, STUDIO_NAME_TX: this.state.Studio, EMAIL_ID_TX: this.state.Email,\n          USER_TYPE_ID: this.state.UserTypeId, WHATSAPP_NO_TX: this.state.Whatsapp, RESELLER_ID: this.state.Reseller_Id,\n          GENDER_NM: this.state.Gender, AGE_NM: this.state.Age, ADDRESS_TX: this.state.Address,\n          STATE_ID: this.state.State_Id, CITY_ID: this.state.City_Id, POSTAL_CODE_TX: this.state.PinCode,\n          PASSWORD_TX: 'fa83b5cfd0546a3a9ef7ca06ec73c78d', WEBSITE_TX: this.state.Website,\n          IP_ADDRESS_TX: this.state.IPAddress, CODE_TX: this.state.Code, AMOUNT: this.state.Amount,\n          BOX_NM: this.state.Box_Id, CHAT_CODE_TX: this.state.ChatCode\n        })\n      };\n      const updateapiUrl = apiURL() + \"addReseller\";\n      fetch(updateapiUrl, updterequestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            alert(\"Inserted successfully\");\n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n\n  render() {\n    let staetsss = this.state.StateDropDown;\n    let optionStateItems = staetsss.map((States) =>\n      <option value={States.ID}>{States.STATE_NAME_TX}</option>\n    );\n    let citiesss = this.state.CityDropDown;\n    let optionCityItems = citiesss.map((City) =>\n      <option value={City.ID}>{City.CITY_NAME_TX}</option>\n    );\n    let Boxess = this.state.BoxDropDown;\n    let optionBoxItems = Boxess.map((box) =>\n      <option value={box.ID}>{box.BOX_NAME_TX}</option>\n    );\n    let Resellers = this.state.ResellerDropDown;\n    let optionResellerItems = Resellers.map((reseller) =>\n      <option value={reseller.ID}>{reseller.NAME_TX}</option>\n    );\n\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Add Reseller / User</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              User Type\n                            </label>\n                            <select className=\"input-group\" style={DropDown} onChange={(e) => { this.setState({ UserTypeId: e.target.value }) }}>\n                              <option value=\"0\">Select User Type</option>\n                              <option value=\"3\">User</option>\n                              <option value=\"2\">Reseller</option>\n                              <option value=\"4\">Studio</option>\n                            </select>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-first-name\"\n                              placeholder=\"Name: john Doe\"\n                              type=\"text\"\n                              onChange={(e) => { this.setState({ Name_Tx: e.target.value }) }}\n                              value={this.state.Name_Tx}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Whatsapp No.\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-username\"\n                              placeholder=\"9999999999\"\n                              type=\"number\"\n                              value={this.state.Whatsapp}\n                              onChange={(e) => { this.setState({ Whatsapp: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Email Id\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-last-name\"\n                              placeholder=\"Email Id: john@gmail.com\"\n                              type=\"text\"\n                              value={this.state.Email}\n                              onChange={(e) => { this.setState({ Email: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      \n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                              value={this.state.Address}\n                              onChange={(e) => { this.setState({ Address: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"India\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\" disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              State\n                            </label>\n                            <select className=\"input-group\" value={this.state.State_Id} style={DropDown} onChange={(e) => { this.handleChangeStates(e.target.value) }}>\n                              <option value=\"0\">Select State</option>\n                              {optionStateItems}\n                            </select>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              City\n                            </label>\n                            <select className=\"input-group\" value={this.state.City_Id} style={DropDown} onChange={(e) => { this.setState({ City_Id: e.target.value }) }}>\n                              <option value=\"0\">Select City</option>\n                              {optionCityItems}\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                              value={this.state.PinCode}\n                              onChange={(e) => { this.setState({ PinCode: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">Official Information</h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                             Studio Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-studio-name\"\n                              placeholder=\"Studio Name: john Studio\"\n                              type=\"text\"\n                              value={this.state.Studio}\n                              onChange={(e) => { this.setState({ Studio: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-reseller-name\"\n                            >\n                              Reseller\n                            </label>\n                            <select className=\"input-group\" value={this.state.Reseller_Id} style={DropDown} onChange={(e) => { this.setState({ Reseller_Id: e.target.value }) }}>\n                              <option value=\"0\">Select Reseller</option>\n                              {optionResellerItems}\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              Website\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-website-name\"\n                              placeholder=\"Website: www.google.com\"\n                              type=\"text\"\n                              value={this.state.Website}\n                              onChange={(e) => { this.setState({ Website: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    \n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doAddReseller()} >\n                          Add\n                   </Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/ViewUser.js",["221","222","223","224","225","226","227","228","229","230","231","232"],"import React from \"react\";\r\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    Media,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Progress,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nlet def_Iv = localStorage.getItem(\"IVkey\");\r\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\r\n\r\nconst uid = localStorage.getItem(\"UID\");\r\nclass Tables extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            GridHeader: [],\r\n            GridData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //alert(uid);\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ ID: uid })\r\n        };\r\n        let stateapiUrl = apiURL() + \"GetUserlist\";\r\n        fetch(stateapiUrl, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((reqdata) => {\r\n                if (reqdata.statcode === 200) {\r\n                    let apiData = {\r\n                        data: JSON.stringify(reqdata.data),\r\n                        iv: def_Iv,\r\n                        key: def_Key\r\n                    }\r\n                    var AfterapiData = JSON.parse(dataDecrypt(apiData));\r\n                    this.setState({ GridData: AfterapiData });\r\n                }\r\n                else {\r\n                    alert(reqdata.statmsg);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        let staetsss = this.state.GridData;\r\n        //console.log(staetsss); \r\n        let trdata = staetsss.map((States) =>\r\n            <tr>\r\n                <td>{States.NAME_TX}</td>\r\n                <td>{States.STUDIO_NAME_TX}</td>\r\n                <td>{States.USER_TYPE_TX}</td>\r\n                <td>{States.EMAIL_ID_TX}</td>\r\n                <td>{States.WHATSAPP_NO_TX}</td>\r\n                <td>{States.RESELLER_NAME_TX}</td>\r\n                <td>{States.STATUS_TX}</td>\r\n                <td>Edit</td>\r\n                <td>Delete</td>\r\n            </tr>\r\n        );\r\n        //console.log(trdata); \r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n                                    <h3 className=\"mb-0\">View User/Reseller</h3>\r\n                                </CardHeader>\r\n                                <Table className=\"align-items-center table-flush\" responsive>\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Studio Name</th>\r\n                                            <th scope=\"col\">User Type</th>\r\n                                            <th scope=\"col\">Email Id</th>\r\n                                            <th scope=\"col\">Whatsapp No</th>\r\n                                            <th scope=\"col\">Reseller Name</th>\r\n                                            <th scope=\"col\">Status</th>\r\n                                            <th scope=\"col\">Edit</th>\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n\r\n                                        {trdata}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tables;\r\n","/root/Development/hdlivedev/ui/src/views/examples/Changepassword.js",["233","234","235","236","237","238","239","240","241","242","243"],"import React from \"react\";\r\nimport { dataEncrypt, dataDecrypt, genPassword, apiURL } from \"util/Util.jsx\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport UserHeader from \"components/Headers/Header.js\";\r\n\r\nclass Changepassword extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      oldpws: \"\",\r\n      newpws: \"\",\r\n      confirmpws: \"\"\r\n    }\r\n  }\r\n\r\n  doChangepassword = () => {\r\n    console.log(\"called\");\r\n    const def_Iv = \"H8Ctcauy/4DhnYyfksuWkw==\";\r\n    const def_Key = \"0e+B7xdXE4I5p8mqAK9r2ejoAGlVx6Mkb2EuHNOoxkg=\";\r\n\r\n    if (this.state.oldpws == \"\") {\r\n      alert(\"Please input old password\");\r\n    }\r\n    else if (this.state.newpws == \"\") {\r\n      alert(\"Please input new password\");\r\n    }\r\n    else if (this.state.oldpws == this.state.newpws) {\r\n      alert(\"Old and New passwords are same, please use different new password.\");\r\n    }\r\n    else if (this.state.newpws.length < 8) {\r\n      alert(\"Password length should be more than 8\");\r\n    }\r\n    else if (!this.state.newpws.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\r\n      alert(\"Password must be contains lower, uppercase, number and two special characters!\");\r\n    }\r\n    else if (!this.state.newpws.match(/([0-9])/)) {\r\n      alert(\"Password must be contains lower, uppercase, number and two special characters!\");\r\n    }\r\n    else if (!this.state.newpws.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\r\n      alert(\"Password must be contains lower, uppercase, number and two special characters!\");\r\n    }\r\n    else if (this.state.confirmpws == \"\") {\r\n      alert(\"Please input confirm password\");\r\n    }\r\n    else if (this.state.newpws != this.state.confirmpws) {\r\n      alert(\"Please check your new password as confirm password is not matched.\");\r\n    }\r\n    else {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ ID: localStorage.getItem(\"UID\"), userpassword: genPassword(this.state.newpws) })\r\n      };\r\n      const apiUrl = apiURL() + \"changePassword\";\r\n      fetch(apiUrl, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((reqdata) => {\r\n          if (reqdata.statcode === 200) {\r\n            alert(\"Password has been changed\");\r\n            localStorage.clear();\r\n            this.props.history.push('/auth');\r\n          }\r\n          else {\r\n            //console.log(reqdata.statmsg); \r\n            alert(reqdata.statmsg);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <UserHeader />\r\n        {/* Page content */}\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n\r\n            <Col className=\"order-xl-1\" xl=\"9\">\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"12\">\r\n                      <h3 className=\"mb-0\">Change Password</h3>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-oldpassword\"\r\n                            >\r\n                              Old Password\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-oldpwd\"\r\n                              placeholder=\"Old Password\"\r\n                              type=\"password\"\r\n                              onChange={(e) => { this.setState({ oldpws: e.target.value }) }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-newpassword\"\r\n                            >\r\n                              New Password\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-newpwd\"\r\n                              placeholder=\"New Password\"\r\n                              type=\"password\"\r\n                              onChange={(e) => { this.setState({ newpws: e.target.value }) }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"12\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-confirmpassword\"\r\n                            >\r\n                              Confirm Password\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-conpwd\"\r\n                              placeholder=\"Confirm Password\"\r\n                              type=\"password\"\r\n                              onChange={(e) => { this.setState({ confirmpws: e.target.value }) }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"12\">\r\n                          <FormGroup>\r\n                            <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doChangepassword()} >\r\n                              Change Password\r\n                   </Button>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Changepassword;\r\n","/root/Development/hdlivedev/ui/src/views/examples/ViewStream.js",["244","245","246","247","248","249","250","251","252","253","254","255"],"import React from \"react\";\r\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    Media,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Progress,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nlet def_Iv = localStorage.getItem(\"IVkey\");\r\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\r\n\r\nconst uid = localStorage.getItem(\"UID\");\r\nclass Tables extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            GridHeader: [],\r\n            GridData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ ID: uid })\r\n        };\r\n        let stateapiUrl = apiURL() + \"GetStreamlist\";\r\n        fetch(stateapiUrl, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((reqdata) => {\r\n                if (reqdata.statcode === 200) {\r\n                    let apiData = {\r\n                        data: JSON.stringify(reqdata.data),\r\n                        iv: def_Iv,\r\n                        key: def_Key\r\n                    }\r\n                    console.log(apiData);\r\n                    var AfterapiData = JSON.parse(dataDecrypt(apiData));\r\n                    this.setState({ GridData: AfterapiData });\r\n                }\r\n                else {\r\n                    alert(reqdata.statmsg);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        let staetsss = this.state.GridData;\r\n        //console.log(staetsss); \r\n        let trdata = staetsss.map((States) =>\r\n            <tr>\r\n                <td>{States.ID}</td>\r\n                <td>{States.EVENT_TITLE_TX}</td>\r\n                <td>{States.STREAM_DT}</td>\r\n                <td>{States.NAME_TX}</td>\r\n                <td>{States.STUDIO_NAME_TX}</td>\r\n                <td>{States.PHONE_TX}</td>\r\n                <td>{States.STATUS_TX}</td>\r\n                <td><Link to={'/admin/addstream?id=' + States.ID}>Edit</Link></td>\r\n                <td><Link to={'/admin/TextEditor?id=' + States.ID}>Edit Template</Link></td>\r\n                <td>Delete</td>\r\n            </tr>\r\n        );\r\n        //console.log(trdata); \r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n                                    <h3 className=\"mb-0\">View Stream</h3>\r\n                                </CardHeader>\r\n                                <Table className=\"align-items-center table-flush\" responsive>\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Id</th>\r\n                                            <th scope=\"col\">Event Title</th>\r\n                                            <th scope=\"col\">Date</th>\r\n                                            <th scope=\"col\">Client</th>\r\n                                            <th scope=\"col\">Organization</th>\r\n                                            <th scope=\"col\">Phone number</th>\r\n                                            <th scope=\"col\">Status</th>\r\n                                            <th scope=\"col\">Edit</th>\r\n                                            <th scope=\"col\">Edit Template</th>\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {trdata}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tables;\r\n","/root/Development/hdlivedev/ui/src/views/examples/CreateStream.js",["256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\nimport moment from \"moment\";\nimport FileBase64 from 'react-file-base64';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  Radio\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\nimport querystring from 'query-string'\n\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n \n  constructor() {\n    super();\n    \n    this.state = {      \n      EventDate: \"\",\n      EventTime: \"\",     \n      IPAddress: \"\",\n      App_Pool_Id: \"\",\n      Code: \"\",      \n    }\n  }\n  getFiles1(files) {\n    this.setState({ files1: files[0].base64 })\n    this.setState({ filename1: files[0].name })\n  }\n  getFiles2(files) {\n    this.setState({ files2: files[0].base64 })\n    this.setState({ filename2: files[0].name })\n  }\n  getFiles3(files) {\n    this.setState({ files3: files[0].base64 })\n    this.setState({ filename3: files[0].name })\n  }\n\n  handleChangeAppPool = (value) => {\n    this.setState({ App_Pool_Id: value });\n    let stream_code = \"\";\n    stream_code = value + \"-\" + localStorage.getItem(\"USER_NAME_TX\") + \"-\" + moment().format(\"DDMMYYYY\") + \"-\" + moment().format(\"hhmm\");\n    this.setState({ Code: stream_code });\n  }\n\n  doAddStream = () => {\n    var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          URL_TITLE_TX: \"\", EVENT_TITLE_TX: \"\",\n          USER_REG_ID: localStorage.getItem(\"UID\"), ADV_TEXT_TX: \"\", STREAM_DATE_DT: this.state.EventDate,\n          STREAM_TIME: this.state.EventTime, VENUE_TX: \"\", IP_ADDRESS_TX: this.state.IPAddress,\n          APP_POOL: this.state.App_Pool_Id, CODE_TX: this.state.Code, YOUTUBE_YN: 0,\n          TEMPLATE_ID: 0, VOD_YN: 0, CHAT_CODE_TX: \"\",\n          IMAGE_NAME_TX: \"\", FULL_PATH_TX: \"\", STREAM_ID: 0, STREAM_IMAGE_BYT: \"\",\n          IMAGE_NAME2_TX: \"\", STREAM_IMAGE2_BYT: \"\",\n          IMAGE_NAME3_TX: \"\", STREAM_IMAGE3_BYT: \"\"\n        })\n      };\n      const apiUrl = apiURL() + \"addUpdateStream\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            alert( \"Stream updated successfully\");\n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n  render() {    \n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Create Stream</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-eventDate\"\n                            >\n                              Date\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-Date\"\n                              placeholder=\"dd/MM/yyyy\"\n                              type=\"Date\"\n                              value={this.state.EventDate}\n                              onChange={(e) => { this.setState({ EventDate: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              Time\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-time\"\n                              placeholder=\"hh:mm\"\n                              type=\"Time\"\n                              value={this.state.EventTime}\n                              onChange={(e) => { this.setState({ EventTime: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <div className=\"pl-lg-4\">                     \n                      <Row>\n                        <Col md=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-ipaddress\"\n                            >\n                              Server Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Server Address\"\n                              type=\"text\"\n                              value={this.state.IPAddress}\n                              onChange={(e) => { this.setState({ IPAddress: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-app_pool\"\n                            >\n                              Application Pool\n                            </label>\n                            <select className=\"input-group\" value={this.state.App_Pool_Id} style={DropDown} onChange={(e) => { this.handleChangeAppPool(e.target.value) }}>\n                              <option value=\"\">Select Application Pool</option>\n                              <option value=\"Live\">Live</option>\n                              <option value=\"UAT\">UAT</option>\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Stream Code\"\n                              type=\"text\"\n                              value={this.state.Code}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <Button className=\"my-4\" color=\"basic\" type=\"button\" onClick={() => { navigator.clipboard.writeText(this.state.Code) }} >\n                              Copy Code\n                          </Button>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      {/* <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Chat code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-chat-code\"\n                              placeholder=\"Chat Code\"\n                              type=\"textarea\" rows=\"5\"\n                              value={this.state.ChatCode}\n                              onChange={(e) => { this.setState({ ChatCode: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row> */}\n                    </div>\n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doAddStream()} >\n                          Add\n                   </Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/Tables.js",[],"/root/Development/hdlivedev/ui/src/views/examples/CreateStreamPlan.js",["269","270","271","272","273","274","275","276","277"],"import React from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\n\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  Radio\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\nimport querystring from 'query-string'\n\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n \n  constructor() {\n    super();\n    \n    this.state = {      \n      Id:0,\n      PlanTypeId:0,\n      UserType: \"\",\n      PlanName: \"\",     \n      StreamSize: \"\",\n      PlanAmount: \"\"    \n    }\n  }\n  \n  componentDidMount()\n  {\n    let searchs=this.props.location.search;\n    let queryparam=querystring.parse(searchs); \n    if(queryparam.id!=undefined)\n    {\n      this.setState({Id: queryparam.id});   \n    let nextrequestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid,PLAN_ID:queryparam.id })\n    };\n    let defdataapiUrl = apiURL() + \"streamplanbyid\";\n    fetch(defdataapiUrl, nextrequestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n          var AfterapiData = AfterapiData2[0];     \n          this.setState({ PlanTypeId: AfterapiData.PLAN_TYPE_ID });     \n          this.setState({ UserType: AfterapiData.USER_TYPE_ID });\n          this.setState({ PlanName: AfterapiData.PLAN_NAME_TX });\n          this.setState({ PlanAmount: AfterapiData.AMOUNT });\n          this.setState({ StreamSize: AfterapiData.STREAM_SIZE_NM });                  \n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n    }\n\n  }   \n\n  doAddStreamPlan = () => {\n    var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          PLAN_ID:this.state.Id,PLAN_TYPE_ID:this.state.PlanTypeId,PLAN_NAME_TX:this.state.PlanName,AMOUNT:this.state.PlanAmount,\n          STREAM_SIZE_NM:this.state.StreamSize,USER_TYPE_ID:this.state.UserType,\n          CREATED_BY:localStorage.getItem(\"UID\")\n        })\n      };\n      const apiUrl = apiURL() + \"addUpdateStreamPlan\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            if(this.state.Id==0)\n            {\n             alert( \"Plan created successfully\");\n            }\n            else\n            {\n              alert( \"Plan updated successfully\");\n            }\n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n  render() {    \n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Create Plan</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <div className=\"pl-lg-4\">\n                    <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Usertype\"\n                            >\n                              Plan Type\n                            </label>\n                          <select className=\"input-group\" style={DropDown} value={this.state.PlanTypeId} onChange={(e) => { this.setState({ PlanTypeId: e.target.value }) }}>\n                            <option value=\"0\">Select Plan Type</option>\n                            <option value=\"1\">Stream</option>\n                            <option value=\"2\">VOD</option>\n                            <option value=\"3\">Viewer</option>\n                          </select>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Usertype\"\n                            >\n                              User Type\n                            </label>\n                          <select className=\"input-group\" style={DropDown} value={this.state.UserType} onChange={(e) => { this.setState({ UserType: e.target.value }) }}>\n                            <option value=\"0\">Select User Type</option>\n                            <option value=\"3\">User</option>\n                            <option value=\"2\">Reseller</option>\n                            <option value=\"4\">Studio</option>\n                          </select>\n                          </FormGroup>\n                        </Col>\n                        </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Usertype\"\n                            >\n                              Plan Model\n                            </label>\n                          <select className=\"input-group\" style={DropDown} value={this.state.UserType} onChange={(e) => { this.setState({ UserType: e.target.value }) }}>\n                            <option value=\"0\">Select User Type</option>\n                            <option value=\"3\">Basic</option>\n                            <option value=\"2\">Silver</option>\n                            <option value=\"4\">Gold</option>\n                          </select>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              Plan Name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-time\"\n                              placeholder=\"Plan Name\"\n                              type=\"text\"\n                              value={this.state.PlanName}\n                              onChange={(e) => { this.setState({ PlanName: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <div className=\"pl-lg-4\">                     \n                      <Row>\n                        <Col md=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-ipaddress\"\n                            >\n                              Size\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Size\"\n                              type=\"number\"\n                              value={this.state.StreamSize}\n                              onChange={(e) => { this.setState({ StreamSize: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-app_pool\"\n                            >\n                              Plan Amount\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Plan Amount\"\n                              type=\"number\"\n                              value={this.state.PlanAmount}\n                              onChange={(e) => { this.setState({ PlanAmount: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>                      \n                    </div>\n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doAddStreamPlan()} >\n                          Add\n                   </Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/ViewStreamPlan.js",["278","279","280","281","282","283","284","285","286","287","288","289"],"import React from \"react\";\r\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    Media,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Progress,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nlet def_Iv = localStorage.getItem(\"IVkey\");\r\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\r\n\r\nconst uid = localStorage.getItem(\"UID\");\r\nclass Tables extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            GridHeader: [],\r\n            GridData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ ID: uid })\r\n        };\r\n        let stateapiUrl = apiURL() + \"GetStreamPlanlist\";\r\n        fetch(stateapiUrl, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((reqdata) => {\r\n                if (reqdata.statcode === 200) {\r\n                    let apiData = {\r\n                        data: JSON.stringify(reqdata.data),\r\n                        iv: def_Iv,\r\n                        key: def_Key\r\n                    }\r\n                   \r\n                    var AfterapiData = JSON.parse(dataDecrypt(apiData));\r\n                    console.log(AfterapiData);\r\n                    this.setState({ GridData: AfterapiData });\r\n                }\r\n                else {\r\n                    alert(reqdata.statmsg);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        let staetsss = this.state.GridData;\r\n        //console.log(staetsss); \r\n      \r\n        let trdata = staetsss.map((States) =>\r\n       \r\n            <tr>  \r\n                <td>{States.PLAN_TYPE_NAME_TX}</td>              \r\n                <td>{States.USER_TYPE_TX}</td>\r\n                <td>{States.PLAN_NAME_TX}</td>\r\n                <td>{States.STREAM_SIZE_NM}</td>\r\n                <td>{States.AMOUNT}</td>  \r\n                <td>{States.STATUS_TX}</td>                \r\n                <td><Link to={\"/admin/CreatestreamPlan?id=\"+States.ID}>Edit</Link></td>\r\n                <td>Delete</td>\r\n            </tr>\r\n        );\r\n        //console.log(trdata); \r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n                                    <h3 className=\"mb-0\">View Stream Plans</h3>\r\n                                </CardHeader>\r\n                                <Table className=\"align-items-center table-flush\" responsive>\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Plan Type</th>\r\n                                            <th scope=\"col\">User Type</th>\r\n                                            <th scope=\"col\">Plan Name</th>\r\n                                            <th scope=\"col\">Size</th>\r\n                                            <th scope=\"col\">Plan Amount</th>\r\n                                            <th scope=\"col\">Status</th>                                            \r\n                                            <th scope=\"col\">Edit</th>\r\n                                            <th scope=\"col\">Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {trdata}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tables;\r\n","/root/Development/hdlivedev/ui/src/views/examples/AddStream.js",["290","291","292","293","294","295","296","297","298","299","300","301","302"],"import React from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\nimport moment from \"moment\";\nimport FileBase64 from 'react-file-base64';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  Radio\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\nimport querystring from 'query-string'\n\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n \n  constructor() {\n    super();\n    \n    this.state = {\n      showElement: false,\n      Urltitle: \"\",\n      Eventtitle: \"\",\n      AdvTxt: \"\",\n      EventDate: \"\",\n      EventTime: \"\",\n      Venue: \"\",\n      TemplateDropDown: [],\n      IPAddress: \"\",\n      App_Pool_Id: \"\",\n      Code: \"\",\n      IsYoutubelink: false,\n      Youtubelinktxt: \"\",\n      Templateid: 0,\n      IsVod: false,\n      ChatCode: \"\",\n      files1: \"\",\n      files2: \"\",\n      files3: \"\",\n      filename1: \"\",\n      filename2: \"\",\n      filename3: \"\",\n      Id:0\n    }\n  }\n  componentDidMount()\n  {\n    let searchs=this.props.location.search;\n    let queryparam=querystring.parse(searchs);       \n    this.setState({Id: queryparam.id});   \n\n    let nextrequestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid,STREAM_ID:queryparam.id })\n    };\n    let defdataapiUrl = apiURL() + \"streambyid\";\n    fetch(defdataapiUrl, nextrequestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n          var AfterapiData = AfterapiData2[0];\n          \n          this.setState({ Urltitle: AfterapiData.URL_TITLE_TX });\n          this.setState({ Eventtitle: AfterapiData.EVENT_TITLE_TX });\n          this.setState({ AdvTxt: AfterapiData.ADV_TEXT_TX });\n          this.setState({ EventDate: AfterapiData.STREAM_DT });\n          this.setState({ EventTime: AfterapiData.STREAM_TIME });\n          this.setState({ Venue: AfterapiData.VENUE_TX });\n          this.setState({ IPAddress: AfterapiData.IP_ADDRESS_TX });\n          this.setState({ App_Pool_Id: AfterapiData.APPLICATION_POOL });\n          this.setState({ Code: AfterapiData.CODE_TX });\n          this.setState({ IsYoutubelink: AfterapiData.YOUTUBE_YN });          \n          if (AfterapiData.YOUTUBE_YN == \"1\") {\n            this.setState({ showElement: true })\n          }\n          else {\n            this.setState({ showElement: false })\n          }\n          this.setState({ Youtubelinktxt: AfterapiData.YOUTUBE_LINK_TX });\n          this.setState({ Templateid: AfterapiData.TEMPLATE_ID });\n          this.setState({ IsVod: AfterapiData.VOD_YN });\n          this.setState({ ChatCode: AfterapiData.CHAT_CODE_TX });          \n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n  } \n  getFiles1(files) {\n    this.setState({ files1: files[0].base64 })\n    this.setState({ filename1: files[0].name })\n  }\n  getFiles2(files) {\n    this.setState({ files2: files[0].base64 })\n    this.setState({ filename2: files[0].name })\n  }\n  getFiles3(files) {\n    this.setState({ files3: files[0].base64 })\n    this.setState({ filename3: files[0].name })\n  }\n\n  handleChangeAppPool = (value) => {\n    this.setState({ App_Pool_Id: value });\n    let stream_code = \"\";\n    stream_code = value + \"-\" + localStorage.getItem(\"USER_NAME_TX\") + \"-\" + moment().format(\"DDMMYYYY\") + \"-\" + moment().format(\"hhmm\");\n    this.setState({ Code: stream_code });\n  }\n\n  CheckYoutube = (value) => {\n    this.setState({ IsYoutubelink: value });\n    if (value == \"1\") {\n      this.setState({ showElement: true })\n    }\n    else {\n      this.setState({ showElement: false })\n    }\n  }\n\n  CheckURLExists = (value) => {\n    let requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: localStorage.getItem(\"UID\"), URLTITLE: value })\n    };\n    let stateapiUrl = apiURL() + \"CheckURL\";\n    fetch(stateapiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData = JSON.parse(dataDecrypt(apiData));\n          let URLexists = AfterapiData[0].URLexists;\n          if (URLexists == \"1\") {\n            this.setState({ Urltitle: \"\" });\n            alert(\"URL Title already exists, please check another URL Title\");\n          }\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n\n  }\n  doAddStream = () => {\n    var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          URL_TITLE_TX: this.state.Urltitle, EVENT_TITLE_TX: this.state.Eventtitle,\n          USER_REG_ID: localStorage.getItem(\"UID\"), ADV_TEXT_TX: this.state.AdvTxt, STREAM_DATE_DT: this.state.EventDate,\n          STREAM_TIME: this.state.EventTime, VENUE_TX: this.state.Venue, IP_ADDRESS_TX: this.state.IPAddress,\n          APP_POOL: this.state.App_Pool_Id, CODE_TX: this.state.Code, YOUTUBE_YN: this.state.IsYoutubelink,\n          TEMPLATE_ID: this.state.Templateid, VOD_YN: this.state.IsVod, CHAT_CODE_TX: this.state.ChatCode,\n          IMAGE_NAME_TX: this.state.filename1, FULL_PATH_TX: \"\", STREAM_ID: this.state.Id, STREAM_IMAGE_BYT: this.state.files1,\n          IMAGE_NAME2_TX: this.state.filename2, STREAM_IMAGE2_BYT: this.state.files2,\n          IMAGE_NAME3_TX: this.state.filename3, STREAM_IMAGE3_BYT: this.state.files3\n        })\n      };\n      const apiUrl = apiURL() + \"addUpdateStream\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {\n            alert( \"Stream updated successfully\");\n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n  render() {    \n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Update Stream</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              URL Title\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-urltitle\"\n                              placeholder=\"Enter URL Title\"\n                              type=\"text\"\n                              onChange={(e) => { this.setState({ Urltitle: e.target.value }) }}\n                              onBlur={(e) => { this.CheckURLExists(e.target.value) }}\n                              value={this.state.Urltitle}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Event-Title\"\n                            >\n                              Event Title\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-Event-Title\"\n                              placeholder=\"Enter Event Title\"\n                              type=\"text\"\n                              onChange={(e) => { this.setState({ Eventtitle: e.target.value }) }}\n                              value={this.state.Eventtitle}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Advtext\"\n                            >\n                              Adv Text\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-Advtext\"\n                              placeholder=\"Enter Adv Text\"\n                              type=\"text\"\n                              value={this.state.AdvTxt}\n                              onChange={(e) => { this.setState({ AdvTxt: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-eventDate\"\n                            >\n                              Date\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-Date\"\n                              placeholder=\"dd/MM/yyyy\"\n                              type=\"text\"\n                              onFocus={\n                                (e)=>{e.currentTarget.type = \"date\";}\n                              }\n                              onBlur={\n                                (e)=>{e.currentTarget.type = \"text\";e.currentTarget.placeholder = \"dd/MM/yyyy\";}\n                              }\n                              value={this.state.EventDate}\n                              onChange={(e) => { this.setState({ EventDate: e.target.value }) }}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              Time\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-time\"\n                              placeholder=\"hh:mm\"\n                              type=\"Time\"\n                              value={this.state.EventTime}\n                              onChange={(e) => { this.setState({ EventTime: e.target.value }) }}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-venue\"\n                            >\n                              Venue\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-venue\"\n                              placeholder=\"Enter Venue\"\n                              type=\"text\"\n                              value={this.state.Venue}\n                              onChange={(e) => { this.setState({ Venue: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col md=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-ipaddress\"\n                            >\n                              Server Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Server Address\"\n                              type=\"text\"\n                              value={this.state.IPAddress}\n                              onChange={(e) => { this.setState({ IPAddress: e.target.value }) }}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-app_pool\"\n                            >\n                              Application Pool\n                            </label>\n                            <select disabled className=\"input-group\" value={this.state.App_Pool_Id} style={DropDown} onChange={(e) => { this.handleChangeAppPool(e.target.value) }}>\n                              <option value=\"\">Select Application Pool</option>\n                              <option value=\"Live\">Live</option>\n                              <option value=\"UAT\">UAT</option>\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Stream Code\"\n                              type=\"text\"\n                              value={this.state.Code}\n                              disabled\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <Button className=\"my-4\" color=\"basic\" type=\"button\" onClick={() => { navigator.clipboard.writeText(this.state.Code); }} >\n                              Copy Code\n                          </Button>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-vod\"\n                            >\n                              Vod\n                            </label>\n\n                            <label style={{ paddingLeft: 40 }}>\n                              <input type=\"radio\" className=\"input-group\" name=\"ISVOD\" value=\"1\" checked={this.state.IsVod!=null && this.state.IsVod==1} onChange={(e) => { this.setState({ IsVod: e.target.value }) }}></input>\n                              <span>Yes</span>\n                            </label>\n                            <label style={{ paddingLeft: 20 }}>\n                              <input type=\"radio\" className=\"input-group\" name=\"ISVOD\" value=\"0\" checked={this.state.IsVod==null || this.state.IsVod!=1} onChange={(e) => { this.setState({ IsVod: e.target.value }) }}></input>\n                              <span>No</span>\n                            </label>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      \n                      <Row>\n                        <Col lg=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-template\"\n                            >\n                              Template\n                            </label>\n                            <select className=\"input-group\" value={this.state.Templateid} style={DropDown} onChange={(e) => { this.setState({ Templateid: e.target.value }) }}>\n                              <option value=\"0\">Select Template</option>\n                              <option value=\"1\">Template 1</option>\n                              <option value=\"2\">Template 2</option>\n                              <option value=\"3\">Template 3</option>\n                            </select>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      {/* <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Chat code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-chat-code\"\n                              placeholder=\"Chat Code\"\n                              type=\"textarea\" rows=\"5\"\n                              value={this.state.ChatCode}\n                              onChange={(e) => { this.setState({ ChatCode: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row> */}\n                    </div>\n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doAddStream()} >\n                          Add\n                   </Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/PurchasePlan.js",["303","304","305","306","307","308","309","310"],"import React from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\n\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  Radio\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\nimport querystring from 'query-string'\n\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n \n  constructor() {\n    super();\n    \n    this.state = {      \n      Id:0,\n      PlanTypeId:0,\n      UserType: \"\",\n      PlanName: \"\",     \n      StreamSize: \"\",\n      PlanAmount: \"\"    \n    }\n  }\n  \n  componentDidMount()\n  {\n    let searchs=this.props.location.search;\n    let queryparam=querystring.parse(searchs); \n    if(queryparam.id!=undefined)\n    {\n      this.setState({Id: queryparam.id});   \n    let nextrequestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid,PLAN_ID:queryparam.id })\n    };\n    let defdataapiUrl = apiURL() + \"streamplanbyid\";\n    fetch(defdataapiUrl, nextrequestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n          var AfterapiData = AfterapiData2[0];     \n          this.setState({ PlanTypeId: AfterapiData.PLAN_TYPE_ID });     \n          this.setState({ UserType: AfterapiData.USER_TYPE_ID });\n          this.setState({ PlanName: AfterapiData.PLAN_NAME_TX });\n          this.setState({ PlanAmount: AfterapiData.AMOUNT });\n          this.setState({ StreamSize: AfterapiData.STREAM_SIZE_NM });                  \n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n    }\n\n  }   \n\n  doPurchase = () => {\n    var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          PLAN_ID:this.state.Id,PLAN_TYPE_ID:this.state.PlanTypeId,AMOUNT:this.state.PlanAmount,\n          TAXAMOUNT:0,TOTALAMOUNT:this.state.PlanAmount,\n          TOTAL_VALUE_NM:this.state.StreamSize,\n          CREATED_BY:localStorage.getItem(\"UID\"),\n          ID:localStorage.getItem(\"UID\")\n        })\n      };\n      const apiUrl = apiURL() + \"PurchasePlanInititate\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {                       \n             let apiData2 = {\n              data: JSON.stringify(reqdata.data),\n              iv: def_Iv,\n              key: def_Key\n            }\n            var AfterapiData2 = JSON.parse(dataDecrypt(apiData2));\n            var AfterapiData = AfterapiData2[0];             \n            this.props.history.push('/admin/ConfirmPurchasePlan?id='+AfterapiData[0].PG_ID);         \n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n  render() {    \n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Purchase Plan</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <div className=\"pl-lg-4\">\n                    <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Usertype\"\n                            >\n                              Plan Type\n                            </label>\n                          <select disabled className=\"input-group\" style={DropDown} value={this.state.PlanTypeId} onChange={(e) => { this.setState({ PlanTypeId: e.target.value }) }}>\n                            <option value=\"0\">Select Plan Type</option>\n                            <option value=\"1\">Stream</option>\n                            <option value=\"2\">VOD</option>\n                            <option value=\"3\">Viewer</option>\n                          </select>\n                          </FormGroup>\n                        </Col>\n                        </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              Plan Name\n                            </label>\n                            <Input\n                              disabled\n                              className=\"form-control-alternative\"\n                              id=\"input-time\"\n                              placeholder=\"Plan Name\"\n                              type=\"text\"\n                              value={this.state.PlanName}\n                              onChange={(e) => { this.setState({ PlanName: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <div className=\"pl-lg-4\">                     \n                      <Row>\n                        <Col md=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-ipaddress\"\n                            >\n                              Size\n                            </label>\n                            <Input\n                              disabled\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Size\"\n                              type=\"number\"\n                              value={this.state.StreamSize}\n                              onChange={(e) => { this.setState({ StreamSize: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-app_pool\"\n                            >\n                              Plan Amount\n                            </label>\n                            <Input\n                              disabled\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Plan Amount\"\n                              type=\"number\"\n                              value={this.state.PlanAmount}\n                              onChange={(e) => { this.setState({ PlanAmount: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>                      \n                    </div>\n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doPurchase()} >\n                          Purchase\n                   </Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/ConfirmPurchasePlan.js",["311","312","313","314","315","316","317","318"],"import React from \"react\";\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\n\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  Radio\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/Header.js\";\nimport querystring from 'query-string'\n\n\nconst DropDown = {\n  \"width\": \"100%\",\n  \"padding\": \"10px 35px 5px 10px\",\n  \"fontSize\": \"0.875rem\",\n  \"border\": \"1px solid #ccc\",\n  \"height\": \"calc(2.75rem + 2px)\",\n  \"WebkitAppearance\": \"none\",\n  \"MozAppearance\": \"none\",\n  \"appearance\": \"none\",\n  \"color\": \"#8898aa\"\n};\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\n\nconst uid = localStorage.getItem(\"UID\");\nclass Profile extends React.Component {\n \n  constructor() {\n    super();\n    \n    this.state = {      \n      Id:0,\n      PlanTypeId:0,\n      UserType: \"\",\n      PlanName: \"\",     \n      StreamSize: \"\",\n      PlanAmount: \"\"    \n    }\n  }\n  \n  componentDidMount()\n  {\n    let searchs=this.props.location.search;\n    let queryparam=querystring.parse(searchs); \n    if(queryparam.id!=undefined)\n    {\n      this.setState({Id: queryparam.id});   \n    let nextrequestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid,PG_ID:queryparam.id })\n    };\n    let defdataapiUrl = apiURL() + \"PlanDetailByPGID\";\n    fetch(defdataapiUrl, nextrequestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n          var AfterapiData = AfterapiData2[0];     \n          this.setState({ PlanTypeId: AfterapiData.PLAN_TYPE_ID });     \n          this.setState({ UserType: AfterapiData.USER_TYPE_ID });\n          this.setState({ PlanName: AfterapiData.PLAN_NAME_TX });\n          this.setState({ PlanAmount: AfterapiData.AMOUNT });\n          this.setState({ StreamSize: AfterapiData.STREAM_SIZE_NM });                  \n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n    }\n\n  }   \n\n  doConfirm = () => {\n    var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (this.state.UserType == \"0\") {\n      alert(\"Please select User Type.\");\n    }\n    // else if (this.state.Name == \"\") {\n    //   alert(\"Please input Name.\");\n    // }\n    // else if (this.state.Email == \"\") {\n    //   alert(\"Please input Email id.\");\n    // }\n    // else if (!regex.test(this.state.Email)) {\n    //   alert(\"Please input valid Email id.\");\n    // }\n    // else if (this.state.WhatsappNumber === \"\") {\n    //   alert(\"Please input whatsapp number.\");\n    // }\n    // else if (this.state.WhatsappNumber.length != 10) {\n    //   alert(\"Please input correct whatsapp number.\");\n    // }\n    // else if (this.state.password_tx == \"\") {\n    //   alert(\"Please input password.\");\n    // }\n    // else if (this.state.password_tx.length < 8) {\n    //   alert(\"Password length should be more than 8\");\n    // }\n    // else if (!this.state.password_tx.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n    // else if (!this.state.password_tx.match(/([0-9])/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    // else if (!this.state.password_tx.match(/(?:[^`!@#$%^&*\\-_=+'\\/.,]*[`!@#$%^&*\\-_=+'\\/.,]){2}/)) {\n    //   alert(\"Password must be contains lower, uppercase, number and two special characters!\");\n    // }\n\n    else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          PG_ID:this.state.Id,CREATED_BY:localStorage.getItem(\"UID\"),\n          ID:localStorage.getItem(\"UID\")\n        })\n      };\n      const apiUrl = apiURL() + \"PurchasePlanSuccess\";\n      fetch(apiUrl, requestOptions)\n        .then((response) => response.json())\n        .then((reqdata) => {\n          if (reqdata.statcode === 200) {                       \n             alert(\"You have purchased the plan successfully\");          \n          }\n          else { console.log(reqdata.statmsg); }\n        });\n    }\n  };\n\n  render() {    \n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"10\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Confirm Plan and Do Payment</h3>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <div className=\"pl-lg-4\">\n                    <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-Usertype\"\n                            >\n                              Plan Type\n                            </label>\n                          <select disabled className=\"input-group\" style={DropDown} value={this.state.PlanTypeId} onChange={(e) => { this.setState({ PlanTypeId: e.target.value }) }}>\n                            <option value=\"0\">Select Plan Type</option>\n                            <option value=\"1\">Stream</option>\n                            <option value=\"2\">VOD</option>\n                            <option value=\"3\">Viewer</option>\n                          </select>\n                          </FormGroup>\n                        </Col>\n                        </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-gender\"\n                            >\n                              Plan Name\n                            </label>\n                            <Input\n                              disabled\n                              className=\"form-control-alternative\"\n                              id=\"input-time\"\n                              placeholder=\"Plan Name\"\n                              type=\"text\"\n                              value={this.state.PlanName}\n                              onChange={(e) => { this.setState({ PlanName: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    <div className=\"pl-lg-4\">                     \n                      <Row>\n                        <Col md=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-ipaddress\"\n                            >\n                              Size\n                            </label>\n                            <Input\n                              disabled\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Size\"\n                              type=\"number\"\n                              value={this.state.StreamSize}\n                              onChange={(e) => { this.setState({ StreamSize: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-app_pool\"\n                            >\n                              Plan Amount\n                            </label>\n                            <Input\n                              disabled\n                              className=\"form-control-alternative\"\n                              id=\"input-ipaddress\"\n                              placeholder=\"Plan Amount\"\n                              type=\"number\"\n                              value={this.state.PlanAmount}\n                              onChange={(e) => { this.setState({ PlanAmount: e.target.value }) }}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>                      \n                    </div>\n                  </Form>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doConfirm()} >\n                          Confirm and Do Payment\n                   </Button>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/root/Development/hdlivedev/ui/src/views/examples/ViewPlanPurchase.js",["319","320","321","322","323","324","325","326","327","328","329","330"],"import React from \"react\";\r\nimport { dataDecrypt, apiURL } from \"util/Util.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    Media,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Progress,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,    \r\n    UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nlet def_Iv = localStorage.getItem(\"IVkey\");\r\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\r\n\r\nconst uid = localStorage.getItem(\"UID\");\r\n\r\nconst DropDown = {\r\n    \"width\": \"100%\",\r\n    \"padding\": \"10px 35px 5px 10px\",\r\n    \"fontSize\": \"0.875rem\",\r\n    \"border\": \"1px solid #ccc\",\r\n    \"height\": \"calc(2.75rem + 2px)\",\r\n    \"WebkitAppearance\": \"none\",\r\n    \"MozAppearance\": \"none\",\r\n    \"appearance\": \"none\",\r\n    \"color\": \"#8898aa\"\r\n  };\r\n\r\nclass Tables extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PlanTypeId:0,\r\n            GridHeader: [],\r\n            GridData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ ID: uid, PLAN_TYPE_ID:this.state.PlanTypeId })\r\n        };\r\n        let stateapiUrl = apiURL() + \"GetPurchasePlanlist\";\r\n        fetch(stateapiUrl, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((reqdata) => {\r\n                if (reqdata.statcode === 200) {\r\n                    let apiData = {\r\n                        data: JSON.stringify(reqdata.data),\r\n                        iv: def_Iv,\r\n                        key: def_Key\r\n                    }\r\n                    \r\n                    var AfterapiData = JSON.parse(dataDecrypt(apiData));                   \r\n                    //console.log(AfterapiData[0]);\r\n                    this.setState({ GridData: AfterapiData[0] });\r\n                }\r\n                else {\r\n                    alert(reqdata.statmsg);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    handleChangePlanType = (value) => {\r\n        this.setState({ PlanTypeId: value });\r\n        let requestOptions1 = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ ID: uid, PLAN_TYPE_ID:value })\r\n        };        \r\n        let stateapiUrl1 = apiURL() + \"GetPurchasePlanlist\";\r\n        fetch(stateapiUrl1, requestOptions1)\r\n            .then((response) => response.json())\r\n            .then((reqdata) => {\r\n                if (reqdata.statcode === 200) {\r\n                    this.setState({ GridData:[] });\r\n                    let apiData = {\r\n                        data: JSON.stringify(reqdata.data),\r\n                        iv: def_Iv,\r\n                        key: def_Key\r\n                    }\r\n                    \r\n                    var AfterapiData = JSON.parse(dataDecrypt(apiData));\r\n                    //console.log(AfterapiData);\r\n                    this.setState({ GridData: AfterapiData[0] });\r\n                }\r\n                else {\r\n                    alert(reqdata.statmsg);\r\n                }\r\n            });\r\n      }\r\n\r\n    render() {\r\n        let staetsss = this.state.GridData;\r\n        //console.log(staetsss); \r\n      \r\n        let trdata = staetsss.map((States) =>\r\n       \r\n            <tr>  \r\n                <td>{States.PLAN_TYPE_NAME_TX}</td>                              \r\n                <td>{States.PLAN_NAME_TX}</td>\r\n                <td>{States.STREAM_SIZE_NM}</td>\r\n                <td>{States.AMOUNT}</td>                                 \r\n                <td><Link to={\"/admin/PurchasePlan?id=\"+States.ID}>Clich Here To Purchase</Link></td>                \r\n            </tr>\r\n        );\r\n        //console.log(trdata); \r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-Usertype\"\r\n                            >\r\n                              Plan Type\r\n                            </label>\r\n                          <select className=\"input-group\" style={DropDown} value={this.state.PlanTypeId} onChange={(e) => { this.handleChangePlanType(e.target.value) }}>\r\n                            <option value=\"0\">Select Plan Type</option>\r\n                            <option value=\"1\">Stream</option>\r\n                            <option value=\"2\">VOD</option>\r\n                            <option value=\"3\">Viewer</option>\r\n                          </select>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        </Row>\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n                                    <h3 className=\"mb-0\">View Plans To Purchase</h3>\r\n                                </CardHeader>\r\n                                <Table className=\"align-items-center table-flush\" responsive>\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Plan Type</th>                                            \r\n                                            <th scope=\"col\">Plan Name</th>\r\n                                            <th scope=\"col\">Size</th>\r\n                                            <th scope=\"col\">Plan Amount</th>                                                                                      \r\n                                            <th scope=\"col\">Purchase</th>                                            \r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {trdata}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tables;\r\n","/root/Development/hdlivedev/ui/src/views/examples/TextEditor.js",["331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { Component } from 'react';\nimport GEditor from 'grapesjs-react';\n//import 'grapesjs/dist/css/grapes.min.css';\nimport InnerHTML from 'dangerously-set-html-content';\n//import React from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport 'grapesjs-preset-webpage/dist/grapesjs-preset-webpage.min.css';\nimport 'grapesjs/dist/grapes.min.js';\nimport 'grapesjs-preset-webpage/dist/grapesjs-preset-webpage.min.js';\n\n\nimport querystring from 'query-string';\nimport { apiURL, dataDecrypt } from \"util/Util.jsx\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col,\n  Radio\n} from \"reactstrap\";\n\n\n// GEditor.defaultProps = {\n//   presetType: 'webpage',\n//   plugins: [],\n//   blocks: [],\n//   blockManager: {},\n//   storageManager: {},\n//   styleManager: {},\n//   width: 'auto',\n//   height: '100vh',\n//   components: [],\n// };\n\nlet def_Iv = localStorage.getItem(\"IVkey\");\nlet def_Key = localStorage.getItem(\"SESSION_KEY\");\nlet uid = localStorage.getItem(\"UID\");\nlet qid=\"0\";\nlet queryparam =null;\nconst defdataapiUrl = apiURL() + \"streambyid\";\nconst defsaveapiUrl = apiURL() + \"UpdateTemplateById\";\nconst editor = () => grapesjs.init({\n  container: '#gjs',\ncanvas: {},\nallowScript: 1,\nplugins: ['gjs-preset-webpage'],\nstorageManager: {\n  type: 'remote',\n  autoload: 1,\n  urlLoad: defdataapiUrl,\n  params: {\n    \n  },\n  autoSave: 1,\n  UrlStore: defsaveapiUrl,\n  \n  onResponse(text, clb) {\n    let searchs = this.props.location.search;\n    queryparam = querystring.parse(searchs);\n    console.log(\"text\");\n    console.log(queryparam);\n    const em = this.get('em');\n    const complete = this.get('onComplete');\n    const typeJson = this.get('contentTypeJson');\n    const parsable = text && typeof text === 'string';\n    //let restxt = typeJson && parsable ? JSON.parse(text) : text;\n    let apiData = {\n      data: JSON.stringify(text),\n      iv: def_Iv,\n      key: def_Key\n    }\n    var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n    var AfterapiData = AfterapiData2[0];\n    const res = { \"edid\":[typeJson && parsable ? JSON.parse(AfterapiData) : AfterapiData]};\n    complete && complete(res);\n    clb && clb(res);\n    em && em.trigger('storage:response', res);\n  }\n}\n});\nclass GEditorExample extends React.Component {\n  constructor(props) {\n    super(props); \n    let searchs = this.props.location.search;\n    queryparam = querystring.parse(searchs);\n    this.state = {\n      Id: 0,\n      Template_body: \"\"\n    }\n    this.setState({ Id: queryparam.id });\n    qid=queryparam.id;\n  }\n  componentDidMount(){\n    \n    \n    //console.log(\"qid\" + qid);\n    editor();\n    //console.log(editor.storageManager);\n  }\n  componentWillUnmount() {\n    editor('destroy');\n  }\n\n  onLoadHTML() {\n    let nextrequestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ID: uid, STREAM_ID: queryparam.id })\n    };\n    fetch(defdataapiUrl, nextrequestOptions)\n      .then((response) => response.json())\n      .then((reqdata) => {\n        if (reqdata.statcode === 200) {\n          let apiData = {\n            data: JSON.stringify(reqdata.data),\n            iv: def_Iv,\n            key: def_Key\n          }\n          var AfterapiData2 = JSON.parse(dataDecrypt(apiData));\n          var AfterapiData = AfterapiData2[0];\n          //alert(AfterapiData.TEMPLATE_BODY_TX);\n          this.setState({ Template_body: AfterapiData.TEMPLATE_BODY_TX });\n          //this.GEditor.InnerHTML.html=this.state.Template_body;\n        }\n        else {\n          alert(reqdata.statmsg);\n        }\n      });\n  }\n  doUpdateTemplate = () => {\n    console.log(this.state.Template_body);\n     const requestOptions = {\n       method: 'POST',\n       headers: { 'Content-Type': 'application/json' },\n       body: JSON.stringify({\n         TEMPLATE_BODY_TX: this.state.Template_body.replace(\"'\", \"''\"), ID: this.state.Id\n       })\n     };\n     const apiUrl = apiURL() + \"UpdateTemplateById\";\n     fetch(apiUrl, requestOptions)\n       .then((response) => response.json())\n       .then((reqdata) => {\n         if (reqdata.statcode === 200) {\n           alert(\"Template updated successfully\");\n         }\n         else { console.log(reqdata.statmsg); }\n    });\n  };\n  render() {    \n    return (\n      <Container>\n        <GEditor id=\"gjs\" blocks={[]} presetType=\"webpage\" width=\"100%\" height=\"600px\" onChange={(e) => { this.setState({ Template_body: e.target.value }) }}>\n          <iframe id=\"edid\"></iframe>\n          \n        </GEditor>\n        <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={() => this.doUpdateTemplate()} >\n          Update</Button>\n      </Container>\n    );\n  }\n}\n\nexport default GEditorExample;","/root/Development/hdlivedev/ui/src/views/examples/TemplateWelcome.js",["344","345","346","347","348"],"import React, { Component } from 'react';\nimport querystring from 'query-string'\nimport InnerHTML from 'dangerously-set-html-content';\nimport { dataEncrypt, dataDecrypt, genPassword, apiURL } from \"util/Util.jsx\";\n\nconst newContent = `<div>This wil be rendered</div>\n<div><img src=\"https://d33wubrfki0l68.cloudfront.net/727b797f23a63181d758e7bb2d404bc351d4ad0c/94569/img/og.png\" alt=\"\">\n</div>\n<script>\n  alert('testing')\n</script>`;\n\nconst rawHTML = `\n<!DOCTYPE html>\n<html lang=\"en\"><!-- Basic -->\n<head>\n\t<meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">   \n   \n    <!-- Mobile Metas -->\n    <meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n \n     <!-- Site Metas -->\n    <title>The Real Wedding - Responsive OnePage HTML5 Template</title>  \n    <meta name=\"keywords\" content=\"\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"author\" content=\"\">\n\n    <!-- Site Icons -->\n    <link rel=\"shortcut icon\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/images/favicon.ico\" type=\"image/x-icon\">\n    <link rel=\"apple-touch-icon\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/images/apple-touch-icon.png\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/css/bootstrap.min.css\">\n    <!-- Pogo Slider CSS -->\n    <link rel=\"stylesheet\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/css/pogo-slider.min.css\">\n\t<!-- Site CSS -->\n    <link rel=\"stylesheet\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/css/style.css\">    \n    <!-- Responsive CSS -->\n    <link rel=\"stylesheet\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/css/responsive.css\">\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/css/custom.css\">\n\n    <!--[if lt IE 9]>\n      <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n      <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n</head>\n<body id=\"home\" data-spy=\"scroll\" data-target=\"#navbar-wd\" data-offset=\"98\">\n\n\t<!-- LOADER -->\n    <div id=\"preloader\" style=\"display:none;\">\n\t\t<div class=\"preloader pulse\">\n\t\t\t<i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\n\t\t</div>\n    </div><!-- end loader -->\n    <!-- END LOADER -->\n\t\n\t<!-- Start header -->\n\t<header class=\"top-header\">\n\t\t<nav class=\"navbar header-nav navbar-expand-lg\">\n            <div class=\"container-fluid\">\n\t\t\t\t<a class=\"navbar-brand\" href=\"index.html\"><img src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/images/logo.jpg\" alt=\"image\"></a>\n\t\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-wd\" aria-controls=\"navbar-wd\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t</button>\n                <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbar-wd\"> \n                     <ul class=\"navbar-nav\"> \n                        <li><a class=\"nav-link active\" href=\"#home\">Home</a></li> \n\t\t\t\t\t\t<li><a class=\"nav-link\" href=\"#about\">Venue</a></li> \n                        <li><a class=\"nav-link\" href=\"#story\">Story</a></li> \n                        <li><a class=\"nav-link\" href=\"#gallery\">Reception</a></li>\n\t\t\t\t\t\t<li><a class=\"nav-link\" href=\"#contact\">Invited by</a></li>\n                     </ul>\n                </div> \n            </div>\n        </nav>\n\t</header>\n\t<!-- End header -->\n\t\n\t<!-- Start Banner -->\n\t<div class=\"ulockd-home-slider\">\n\t\t<div class=\"container-fluid\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"pogoSlider\" id=\"js-main-slider\">\n\t\t\t\t\t<div class=\"pogoSlider-slide\" data-transition=\"zipReveal\" data-duration=\"1500\" style=\"background-image:url(https://grapesjs.fra1.digitaloceanspaces.com/Template/images/slider-01.jpg);\">\n\t\t\t\t\t\t<div class=\"lbox-caption\">\n\t\t\t\t\t\t\t<div class=\"lbox-details\">\n\t\t\t\t\t\t\t\t<h1>#Leida & #Dominic</h1>\n\t\t\t\t\t\t\t\t<h2>We're getting married</h3>\n\t\t\t\t\t\t\t\t<p>Save The Date &nbsp;&nbsp; <strong>20 June 2018</strong></p>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"pogoSlider-slide\" data-transition=\"blocksReveal\" data-duration=\"1500\" style=\"background-image:url(https://grapesjs.fra1.digitaloceanspaces.com/Template/images/slider-02.jpg);\">\n\t\t\t\t\t\t<div class=\"lbox-caption\">\n\t\t\t\t\t\t\t<div class=\"lbox-details\">\n\t\t\t\t\t\t\t\t<h1>#Leida & #Dominic</h1>\n\t\t\t\t\t\t\t\t<h2>We're getting married</h3>\n\t\t\t\t\t\t\t\t<p>Save The Date &nbsp;&nbsp;<strong>20 June 2018</strong></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"pogoSlider-slide\" data-transition=\"shrinkReveal\" data-duration=\"2000\" style=\"background-image:url(https://grapesjs.fra1.digitaloceanspaces.com/Template/images/slider-03.jpg);\">\n\t\t\t\t\t\t<div class=\"lbox-caption\">\n\t\t\t\t\t\t\t<div class=\"lbox-details\">\n\t\t\t\t\t\t\t\t<h1>#Leida & #Dominic</h1>\n\t\t\t\t\t\t\t\t<h2>We're getting married</h3>\n\t\t\t\t\t\t\t\t<p>Save The Date &nbsp;&nbsp;<strong>20 June 2018</strong></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div><!-- .pogoSlider -->\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- End Banner -->\n\t\n\t<!-- Start About us -->\n\t<div id=\"about\" class=\"about-box\">\n\t\t<div class=\"about-a1\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t<div class=\"title-box\">\n\t\t\t\t\t\t\t<h2><span style=\"text-decoration:none;\">Venue</span></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t<div class=\"row align-items-center about-main-info\">\n\t\t\t\t\t\t\t<div class=\"col-sm-12\">\n\t\t\t\t\t\t\t\t<h2 style=\"text-align:center;\"> SPG Grand Banquet Hall</h2>\n\t\t\t\t\t\t\t\t<p style=\"text-align:center;\">2nd Floor, Above Bajaj Electronics, Champapet Road, Karmanghat, Thapovan Colony, Sai Nagar, East Saroor Nagar, beside Krishna Sai Hospital, Hyderabad, Telangana 500079 </p>\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- End About us -->\n\t\n\t<!-- Start Story -->\n\t<div id=\"story\" class=\"story-box main-timeline-box\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<div class=\"title-box\">\n\t\t\t\t\t\t<h2>Our Story</h2>\n\t\t\t\t\t\t<video width=\"800\" controls>\n\t\t\t\t\t\t  <source src=\"mov_bbb.mp4\" type=\"video/mp4\">\n\t\t\t\t\t\t  <source src=\"mov_bbb.ogg\" type=\"video/ogg\">\n\t\t\t\t\t\t  Your browser does not support HTML video.\n\t\t\t\t\t\t</video>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- End Story -->\n\t\n\t<!-- Start Gallery -->\n\t<div id=\"gallery\" class=\"gallery-box\">\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- <div class=\"row\"> -->\n\t\t\t\t<!-- <div class=\"col-lg-12\"> -->\n\t\t\t\t\t<!-- <div class=\"title-box\"> -->\n\t\t\t\t\t\t<!-- <h2>Gallery</h2> -->\n\t\t\t\t\t\t<!-- <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p> -->\n\t\t\t\t\t<!-- </div> -->\n\t\t\t\t<!-- </div> -->\n\t\t\t<!-- </div> -->\n\t\t\t<div class=\"row\">\n\t\t\t<img class=\"img-fluid\" src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/images/reception-bg.jpg\" alt=\"single image\" width=\"100%\">\t\n<div  style=\"margin-top: -300px;margin-left: 550px;font-family: 'Marck Script', cursive;\"><h1 style=\"color:#f0f0f0; font-size: 80px;\">Reception</h1>\t</div>\t\t\t\n\t\t\t\t<!-- <ul class=\"popup-gallery clearfix\"> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/reception-bg.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/reception-bg.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> --> \n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-02.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-02.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-03.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-03.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-04.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-04.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-05.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-05.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-06.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-06.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-07.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-07.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t\t<!-- <li> -->\n\t\t\t\t\t\t<!-- <a href=\"images/gallery-08.jpg\"> -->\n\t\t\t\t\t\t\t<!-- <img class=\"img-fluid\" src=\"images/gallery-08.jpg\" alt=\"single image\"> -->\n\t\t\t\t\t\t\t<!-- <span class=\"overlay\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></span> -->\n\t\t\t\t\t\t<!-- </a> -->\n\t\t\t\t\t<!-- </li> -->\n\t\t\t\t<!-- </ul> -->\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- End Gallery -->\n\t\n\t<!-- Start Contact -->\n\t<div id=\"contact\" class=\"contact-box\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<div class=\"title-box\">\n\t\t\t\t\t<img class=\"img-fluid\" src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/images/By-300x236.jpg\" alt=\"single image\">\t\n\t\t\t\t\t\t<h2>Smt. & Mudavath Laxmi – Laxman</h2>\n\t\t\t\t\t\t<p>You can call  Javahar  ( bride brother) </p>\n\t\t\t\t\t\t<button style=\"color: #f0f0f0;background-color: crimson;border: none;width:140px;height:40px;\">+91 9999999999</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- End Contact -->\n\t\n\t<!-- Start Footer -->\n\t<footer class=\"footer-box\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<p class=\"footer-company-name\">All Rights Reserved. &copy; 2021 <a href=\"#\">HD Live</a> Design By : Hanu Team</a></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</footer>\n\t<!-- End Footer -->\n\t\n\t<style type=\"text/css\">\n\t.centered {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n\n\t<!-- ALL JS FILES -->\n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/jquery.min.js\"></script>\n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/popper.min.js\"></script>\n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/bootstrap.min.js\"></script>\n    <!-- ALL PLUGINS -->\n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/jquery.magnific-popup.min.js\"></script>\n    <script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/jquery.pogo-slider.min.js\"></script> \n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/slider-index.js\"></script>\n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/smoothscroll.js\"></script>\n\t<script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/form-validator.min.js\"></script>\n    <script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/contact-form-script.js\"></script>\n    <script src=\"https://grapesjs.fra1.digitaloceanspaces.com/Template/js/custom.js\"></script>\n</body>\n</html>\n<script>\nsetTimeout(function(){ \n\t$(\"#root div\").eq(1).removeClass(\"container\").addClass(\"container-fluid\");\n}, 3000);\n</script>\n`\n\n\nconst def_Iv = \"H8Ctcauy/4DhnYyfksuWkw==\";\nconst def_Key = \"0e+B7xdXE4I5p8mqAK9r2ejoAGlVx6Mkb2EuHNOoxkg=\";\n\nclass GEditorExample extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tTEMPLATE_BODY: \"\"\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tlet searchs = this.props.location.search;\n\t\tlet queryparam = querystring.parse(searchs);\n\t\tif (queryparam.urltitle == \"\" || queryparam.urltitle == null) {\n\t\t\tthis.props.history.push('/auth');\n\t\t}\n\t\t//console.log(queryparam.urltitle);\n\n\t\tlet requestOptions = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ URL_TITLE_TX: queryparam.urltitle })\n\t\t};\n\t\tlet SlrapiUrl = apiURL() + \"streambyUrlTitle\";\n\t\tfetch(SlrapiUrl, requestOptions)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((reqdata) => {\n\t\t\t\tif (reqdata.statcode === 200) {\n\t\t\t\t\tlet apiData = {\n\t\t\t\t\t\tdata: JSON.stringify(reqdata.data),\n\t\t\t\t\t\tiv: def_Iv,\n\t\t\t\t\t\tkey: def_Key\n\t\t\t\t\t}\n\n\t\t\t\t\tvar AfterapiData = JSON.parse(dataDecrypt(apiData));\n\t\t\t\t\tconsole.log(AfterapiData);\n\t\t\t\t\tthis.setState({ TEMPLATE_BODY: AfterapiData.TEMPLATE_BODY_TX });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert(reqdata.statmsg);\n\t\t\t\t\tthis.props.history.push('/auth');\n\t\t\t\t}\n\t\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t// <img src={logo} alt=\"Logo\" />\n\t\t\t//   <div>{Parser(rawHTML)}</div>//newContent\n\t\t\t<InnerHTML html={this.state.TEMPLATE_BODY} />\t\t\t\t\t\n\t\t);\n\t}\n}\n\nexport default GEditorExample;","/root/Development/hdlivedev/ui/src/components/Headers/Header.js",["349","350","351","352","353","354"],"import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          {/* <Container fluid> */}\n            {/* <div className=\"header-body\"> */}\n              {/* Card stats */}\n              {/* <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Traffic\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            350,897\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            New users\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            2,356\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-danger mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Sales\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">924</span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-warning mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 1.10%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since yesterday</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Performance\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            49,65%\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fas fa-arrow-up\" /> 12%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div> */}\n          {/* </Container> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","/root/Development/hdlivedev/ui/src/util/Util.jsx",["355","356"],"import Crypto from \"crypto\";\r\nimport querystring from 'query-string';\r\nconst algorithm = 'aes-256-cbc';\r\n\r\nconst dataDecrypt = function (text) {\r\n    let iv = Buffer.from(text.iv, 'base64');\r\n    let key = Buffer.from(text.key, 'base64');\r\n    let encryptedText = Buffer.from(text.data, 'base64');\r\n    let decipher = Crypto.createDecipheriv('aes-256-cbc', key, iv);\r\n    let decrypted = decipher.update(encryptedText);\r\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n    return decrypted.toString();\r\n}\r\n\r\nconst dataEncrypt = (text, iv, key, r) => {\r\n    let ivx = Buffer.from(iv, 'base64');\r\n    let keyy = Buffer.from(key, 'base64');\r\n    let cipher = Crypto.createCipheriv('aes-256-cbc', keyy, ivx);\r\n    let enc = cipher.update(text);\r\n    let encrypted = Buffer.concat([enc, cipher.final()]);\r\n    if (r) return { iv: ivx.toString('base64'), data: encrypted.toString('base64'), key: keyy.toString('base64') };\r\n    else return encrypted.toString('base64');\r\n}\r\n\r\nconst genPassword = (text) => {\r\n    ///creating hmac object \r\n    var hmac = Crypto.createHmac('md5', 'Hdlive@123');\r\n    //passing the data to be hashed\r\n    var data = hmac.update(text);\r\n    //Creating the hmac in the required format\r\n    var gen_hmac = data.digest('hex');\r\n    //Printing the output on the console\r\n    //console.log(\"hmac : \" + gen_hmac);\r\n    return gen_hmac.toString();\r\n}\r\n\r\nconst apiURL = () => {\r\n    return \"http://139.59.16.245:3020/api/\";\r\n}\r\n\r\n/*const strIndexOf(sr,indx){\r\n    return sr.indexOf(ind);\r\n}*/\r\n/*const retQryParameters = () => {\r\n    return querystring.parse(this.props.location.search);\r\n}*/\r\n\r\nexport { dataEncrypt, dataDecrypt, genPassword, apiURL };\r\n","/root/Development/hdlivedev/ui/src/variables/charts.js",[],"/root/Development/hdlivedev/ui/src/layouts/User.js",["357","358"],"/root/Development/hdlivedev/ui/src/layouts/Studio.js",["359","360"],"import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\nimport logo from \"assets/img/brand/logo.png\";\n\nclass Studio extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (localStorage.getItem(\"SESSION_KEY\") == null ||\n        localStorage.getItem(\"SESSION_KEY\") == \"\") {\n        this.props.history.push('/auth');\n      }\n      else if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: logo,\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Studio;\n","/root/Development/hdlivedev/ui/src/layouts/Reseller.js",["361","362"],"import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\nimport logo from \"assets/img/brand/logo.png\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (localStorage.getItem(\"SESSION_KEY\") == null ||\n        localStorage.getItem(\"SESSION_KEY\") == \"\") {\n        this.props.history.push('/auth');\n      }\n      else if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: logo,\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/root/Development/hdlivedev/ui/src/components/Navbars/UserNavbar.js",[],{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":20,"column":35,"nodeType":"369","messageId":"370","endLine":20,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":22,"column":45,"nodeType":"373","messageId":"374","endLine":22,"endColumn":47},{"ruleId":"375","severity":1,"message":"376","line":4,"column":26,"nodeType":"377","messageId":"378","endLine":4,"endColumn":29},{"ruleId":"379","severity":1,"message":"380","line":275,"column":1,"nodeType":"381","endLine":275,"endColumn":51},{"ruleId":"382","severity":1,"message":"383","line":19,"column":21,"nodeType":"384","endLine":19,"endColumn":36},{"ruleId":"375","severity":1,"message":"385","line":4,"column":10,"nodeType":"377","messageId":"378","endLine":4,"endColumn":19},{"ruleId":"375","severity":1,"message":"386","line":8,"column":3,"nodeType":"377","messageId":"378","endLine":8,"endColumn":9},{"ruleId":"375","severity":1,"message":"387","line":9,"column":3,"nodeType":"377","messageId":"378","endLine":9,"endColumn":7},{"ruleId":"375","severity":1,"message":"388","line":10,"column":3,"nodeType":"377","messageId":"378","endLine":10,"endColumn":13},{"ruleId":"375","severity":1,"message":"389","line":11,"column":3,"nodeType":"377","messageId":"378","endLine":11,"endColumn":11},{"ruleId":"375","severity":1,"message":"390","line":12,"column":3,"nodeType":"377","messageId":"378","endLine":12,"endColumn":12},{"ruleId":"375","severity":1,"message":"391","line":18,"column":3,"nodeType":"377","messageId":"378","endLine":18,"endColumn":12},{"ruleId":"375","severity":1,"message":"392","line":30,"column":3,"nodeType":"377","messageId":"378","endLine":30,"endColumn":11},{"ruleId":"375","severity":1,"message":"393","line":31,"column":3,"nodeType":"377","messageId":"378","endLine":31,"endColumn":8},{"ruleId":"375","severity":1,"message":"394","line":37,"column":5,"nodeType":"377","messageId":"378","endLine":37,"endColumn":7},{"ruleId":"367","severity":1,"message":"368","line":65,"column":35,"nodeType":"369","messageId":"370","endLine":65,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":66,"column":21,"nodeType":"373","messageId":"374","endLine":66,"endColumn":23},{"ruleId":"375","severity":1,"message":"395","line":85,"column":13,"nodeType":"377","messageId":"378","endLine":85,"endColumn":20},{"ruleId":"375","severity":1,"message":"396","line":1,"column":17,"nodeType":"377","messageId":"378","endLine":1,"endColumn":26},{"ruleId":"375","severity":1,"message":"397","line":21,"column":10,"nodeType":"377","messageId":"378","endLine":21,"endColumn":26},{"ruleId":"375","severity":1,"message":"398","line":35,"column":7,"nodeType":"377","messageId":"378","endLine":35,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":170,"column":28,"nodeType":"373","messageId":"374","endLine":170,"endColumn":30},{"ruleId":"375","severity":1,"message":"399","line":2,"column":10,"nodeType":"377","messageId":"378","endLine":2,"endColumn":21},{"ruleId":"375","severity":1,"message":"388","line":9,"column":3,"nodeType":"377","messageId":"378","endLine":9,"endColumn":13},{"ruleId":"375","severity":1,"message":"400","line":21,"column":8,"nodeType":"377","messageId":"378","endLine":21,"endColumn":14},{"ruleId":"375","severity":1,"message":"401","line":22,"column":8,"nodeType":"377","messageId":"378","endLine":22,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":50,"column":29,"nodeType":"373","messageId":"374","endLine":50,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":53,"column":34,"nodeType":"373","messageId":"374","endLine":53,"endColumn":36},{"ruleId":"371","severity":1,"message":"372","line":56,"column":29,"nodeType":"373","messageId":"374","endLine":56,"endColumn":31},{"ruleId":"375","severity":1,"message":"388","line":8,"column":3,"nodeType":"377","messageId":"378","endLine":8,"endColumn":13},{"ruleId":"375","severity":1,"message":"402","line":16,"column":3,"nodeType":"377","messageId":"378","endLine":16,"endColumn":6},{"ruleId":"375","severity":1,"message":"403","line":19,"column":10,"nodeType":"377","messageId":"378","endLine":19,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":78,"column":15,"nodeType":"373","messageId":"374","endLine":78,"endColumn":17},{"ruleId":"404","severity":1,"message":"405","line":85,"column":31,"nodeType":"406","messageId":"407","endLine":85,"endColumn":32,"suggestions":"408"},{"ruleId":"404","severity":1,"message":"409","line":85,"column":35,"nodeType":"406","messageId":"407","endLine":85,"endColumn":36,"suggestions":"410"},{"ruleId":"404","severity":1,"message":"411","line":85,"column":40,"nodeType":"406","messageId":"407","endLine":85,"endColumn":41,"suggestions":"412"},{"ruleId":"404","severity":1,"message":"413","line":85,"column":54,"nodeType":"406","messageId":"407","endLine":85,"endColumn":55,"suggestions":"414"},{"ruleId":"371","severity":1,"message":"372","line":86,"column":29,"nodeType":"373","messageId":"374","endLine":86,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":89,"column":30,"nodeType":"373","messageId":"374","endLine":89,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":92,"column":31,"nodeType":"373","messageId":"374","endLine":92,"endColumn":33},{"ruleId":"371","severity":1,"message":"415","line":101,"column":47,"nodeType":"373","messageId":"374","endLine":101,"endColumn":49},{"ruleId":"371","severity":1,"message":"372","line":104,"column":37,"nodeType":"373","messageId":"374","endLine":104,"endColumn":39},{"ruleId":"404","severity":1,"message":"416","line":117,"column":65,"nodeType":"406","messageId":"407","endLine":117,"endColumn":66,"suggestions":"417"},{"ruleId":"404","severity":1,"message":"416","line":117,"column":87,"nodeType":"406","messageId":"407","endLine":117,"endColumn":88,"suggestions":"418"},{"ruleId":"371","severity":1,"message":"372","line":203,"column":28,"nodeType":"373","messageId":"374","endLine":203,"endColumn":30},{"ruleId":"375","severity":1,"message":"419","line":274,"column":9,"nodeType":"377","messageId":"378","endLine":274,"endColumn":23},{"ruleId":"375","severity":1,"message":"420","line":6,"column":5,"nodeType":"377","messageId":"378","endLine":6,"endColumn":10},{"ruleId":"375","severity":1,"message":"421","line":9,"column":5,"nodeType":"377","messageId":"378","endLine":9,"endColumn":15},{"ruleId":"375","severity":1,"message":"422","line":10,"column":5,"nodeType":"377","messageId":"378","endLine":10,"endColumn":17},{"ruleId":"375","severity":1,"message":"423","line":11,"column":5,"nodeType":"377","messageId":"378","endLine":11,"endColumn":17},{"ruleId":"375","severity":1,"message":"424","line":12,"column":5,"nodeType":"377","messageId":"378","endLine":12,"endColumn":25},{"ruleId":"375","severity":1,"message":"425","line":13,"column":5,"nodeType":"377","messageId":"378","endLine":13,"endColumn":19},{"ruleId":"375","severity":1,"message":"426","line":14,"column":5,"nodeType":"377","messageId":"378","endLine":14,"endColumn":10},{"ruleId":"375","severity":1,"message":"427","line":15,"column":5,"nodeType":"377","messageId":"378","endLine":15,"endColumn":15},{"ruleId":"375","severity":1,"message":"428","line":16,"column":5,"nodeType":"377","messageId":"378","endLine":16,"endColumn":19},{"ruleId":"375","severity":1,"message":"429","line":17,"column":5,"nodeType":"377","messageId":"378","endLine":17,"endColumn":19},{"ruleId":"375","severity":1,"message":"392","line":18,"column":5,"nodeType":"377","messageId":"378","endLine":18,"endColumn":13},{"ruleId":"375","severity":1,"message":"430","line":22,"column":5,"nodeType":"377","messageId":"378","endLine":22,"endColumn":24},{"ruleId":"375","severity":1,"message":"399","line":2,"column":10,"nodeType":"377","messageId":"378","endLine":2,"endColumn":21},{"ruleId":"375","severity":1,"message":"431","line":2,"column":23,"nodeType":"377","messageId":"378","endLine":2,"endColumn":34},{"ruleId":"375","severity":1,"message":"432","line":33,"column":11,"nodeType":"377","messageId":"378","endLine":33,"endColumn":17},{"ruleId":"375","severity":1,"message":"433","line":34,"column":11,"nodeType":"377","messageId":"378","endLine":34,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":36,"column":27,"nodeType":"373","messageId":"374","endLine":36,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":39,"column":32,"nodeType":"373","messageId":"374","endLine":39,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":42,"column":32,"nodeType":"373","messageId":"374","endLine":42,"endColumn":34},{"ruleId":"404","severity":1,"message":"416","line":54,"column":60,"nodeType":"406","messageId":"407","endLine":54,"endColumn":61,"suggestions":"434"},{"ruleId":"404","severity":1,"message":"416","line":54,"column":82,"nodeType":"406","messageId":"407","endLine":54,"endColumn":83,"suggestions":"435"},{"ruleId":"371","severity":1,"message":"372","line":57,"column":36,"nodeType":"373","messageId":"374","endLine":57,"endColumn":38},{"ruleId":"371","severity":1,"message":"415","line":60,"column":32,"nodeType":"373","messageId":"374","endLine":60,"endColumn":34},{"ruleId":"375","severity":1,"message":"420","line":7,"column":5,"nodeType":"377","messageId":"378","endLine":7,"endColumn":10},{"ruleId":"375","severity":1,"message":"421","line":10,"column":5,"nodeType":"377","messageId":"378","endLine":10,"endColumn":15},{"ruleId":"375","severity":1,"message":"422","line":11,"column":5,"nodeType":"377","messageId":"378","endLine":11,"endColumn":17},{"ruleId":"375","severity":1,"message":"423","line":12,"column":5,"nodeType":"377","messageId":"378","endLine":12,"endColumn":17},{"ruleId":"375","severity":1,"message":"424","line":13,"column":5,"nodeType":"377","messageId":"378","endLine":13,"endColumn":25},{"ruleId":"375","severity":1,"message":"425","line":14,"column":5,"nodeType":"377","messageId":"378","endLine":14,"endColumn":19},{"ruleId":"375","severity":1,"message":"426","line":15,"column":5,"nodeType":"377","messageId":"378","endLine":15,"endColumn":10},{"ruleId":"375","severity":1,"message":"427","line":16,"column":5,"nodeType":"377","messageId":"378","endLine":16,"endColumn":15},{"ruleId":"375","severity":1,"message":"428","line":17,"column":5,"nodeType":"377","messageId":"378","endLine":17,"endColumn":19},{"ruleId":"375","severity":1,"message":"429","line":18,"column":5,"nodeType":"377","messageId":"378","endLine":18,"endColumn":19},{"ruleId":"375","severity":1,"message":"392","line":19,"column":5,"nodeType":"377","messageId":"378","endLine":19,"endColumn":13},{"ruleId":"375","severity":1,"message":"430","line":23,"column":5,"nodeType":"377","messageId":"378","endLine":23,"endColumn":24},{"ruleId":"375","severity":1,"message":"431","line":2,"column":10,"nodeType":"377","messageId":"378","endLine":2,"endColumn":21},{"ruleId":"375","severity":1,"message":"436","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":18},{"ruleId":"375","severity":1,"message":"437","line":18,"column":3,"nodeType":"377","messageId":"378","endLine":18,"endColumn":8},{"ruleId":"375","severity":1,"message":"438","line":22,"column":8,"nodeType":"377","messageId":"378","endLine":22,"endColumn":19},{"ruleId":"375","severity":1,"message":"432","line":36,"column":5,"nodeType":"377","messageId":"378","endLine":36,"endColumn":11},{"ruleId":"375","severity":1,"message":"433","line":37,"column":5,"nodeType":"377","messageId":"378","endLine":37,"endColumn":12},{"ruleId":"375","severity":1,"message":"439","line":39,"column":7,"nodeType":"377","messageId":"378","endLine":39,"endColumn":10},{"ruleId":"375","severity":1,"message":"440","line":74,"column":9,"nodeType":"377","messageId":"378","endLine":74,"endColumn":14},{"ruleId":"404","severity":1,"message":"405","line":74,"column":31,"nodeType":"406","messageId":"407","endLine":74,"endColumn":32,"suggestions":"441"},{"ruleId":"404","severity":1,"message":"409","line":74,"column":35,"nodeType":"406","messageId":"407","endLine":74,"endColumn":36,"suggestions":"442"},{"ruleId":"404","severity":1,"message":"411","line":74,"column":40,"nodeType":"406","messageId":"407","endLine":74,"endColumn":41,"suggestions":"443"},{"ruleId":"404","severity":1,"message":"413","line":74,"column":54,"nodeType":"406","messageId":"407","endLine":74,"endColumn":55,"suggestions":"444"},{"ruleId":"371","severity":1,"message":"372","line":75,"column":29,"nodeType":"373","messageId":"374","endLine":75,"endColumn":31},{"ruleId":"375","severity":1,"message":"437","line":17,"column":3,"nodeType":"377","messageId":"378","endLine":17,"endColumn":8},{"ruleId":"371","severity":1,"message":"415","line":58,"column":21,"nodeType":"373","messageId":"374","endLine":58,"endColumn":23},{"ruleId":"375","severity":1,"message":"440","line":93,"column":9,"nodeType":"377","messageId":"378","endLine":93,"endColumn":14},{"ruleId":"404","severity":1,"message":"405","line":93,"column":31,"nodeType":"406","messageId":"407","endLine":93,"endColumn":32,"suggestions":"445"},{"ruleId":"404","severity":1,"message":"409","line":93,"column":35,"nodeType":"406","messageId":"407","endLine":93,"endColumn":36,"suggestions":"446"},{"ruleId":"404","severity":1,"message":"411","line":93,"column":40,"nodeType":"406","messageId":"407","endLine":93,"endColumn":41,"suggestions":"447"},{"ruleId":"404","severity":1,"message":"413","line":93,"column":54,"nodeType":"406","messageId":"407","endLine":93,"endColumn":55,"suggestions":"448"},{"ruleId":"371","severity":1,"message":"372","line":94,"column":29,"nodeType":"373","messageId":"374","endLine":94,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":144,"column":29,"nodeType":"373","messageId":"374","endLine":144,"endColumn":31},{"ruleId":"375","severity":1,"message":"420","line":7,"column":5,"nodeType":"377","messageId":"378","endLine":7,"endColumn":10},{"ruleId":"375","severity":1,"message":"421","line":10,"column":5,"nodeType":"377","messageId":"378","endLine":10,"endColumn":15},{"ruleId":"375","severity":1,"message":"422","line":11,"column":5,"nodeType":"377","messageId":"378","endLine":11,"endColumn":17},{"ruleId":"375","severity":1,"message":"423","line":12,"column":5,"nodeType":"377","messageId":"378","endLine":12,"endColumn":17},{"ruleId":"375","severity":1,"message":"424","line":13,"column":5,"nodeType":"377","messageId":"378","endLine":13,"endColumn":25},{"ruleId":"375","severity":1,"message":"425","line":14,"column":5,"nodeType":"377","messageId":"378","endLine":14,"endColumn":19},{"ruleId":"375","severity":1,"message":"426","line":15,"column":5,"nodeType":"377","messageId":"378","endLine":15,"endColumn":10},{"ruleId":"375","severity":1,"message":"427","line":16,"column":5,"nodeType":"377","messageId":"378","endLine":16,"endColumn":15},{"ruleId":"375","severity":1,"message":"428","line":17,"column":5,"nodeType":"377","messageId":"378","endLine":17,"endColumn":19},{"ruleId":"375","severity":1,"message":"429","line":18,"column":5,"nodeType":"377","messageId":"378","endLine":18,"endColumn":19},{"ruleId":"375","severity":1,"message":"392","line":19,"column":5,"nodeType":"377","messageId":"378","endLine":19,"endColumn":13},{"ruleId":"375","severity":1,"message":"430","line":23,"column":5,"nodeType":"377","messageId":"378","endLine":23,"endColumn":24},{"ruleId":"375","severity":1,"message":"436","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":18},{"ruleId":"375","severity":1,"message":"437","line":18,"column":3,"nodeType":"377","messageId":"378","endLine":18,"endColumn":8},{"ruleId":"371","severity":1,"message":"372","line":105,"column":39,"nodeType":"373","messageId":"374","endLine":105,"endColumn":41},{"ruleId":"371","severity":1,"message":"372","line":144,"column":15,"nodeType":"373","messageId":"374","endLine":144,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":170,"column":25,"nodeType":"373","messageId":"374","endLine":170,"endColumn":27},{"ruleId":"375","severity":1,"message":"440","line":182,"column":9,"nodeType":"377","messageId":"378","endLine":182,"endColumn":14},{"ruleId":"404","severity":1,"message":"405","line":182,"column":31,"nodeType":"406","messageId":"407","endLine":182,"endColumn":32,"suggestions":"449"},{"ruleId":"404","severity":1,"message":"409","line":182,"column":35,"nodeType":"406","messageId":"407","endLine":182,"endColumn":36,"suggestions":"450"},{"ruleId":"404","severity":1,"message":"411","line":182,"column":40,"nodeType":"406","messageId":"407","endLine":182,"endColumn":41,"suggestions":"451"},{"ruleId":"404","severity":1,"message":"413","line":182,"column":54,"nodeType":"406","messageId":"407","endLine":182,"endColumn":55,"suggestions":"452"},{"ruleId":"371","severity":1,"message":"372","line":183,"column":29,"nodeType":"373","messageId":"374","endLine":183,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":467,"column":149,"nodeType":"373","messageId":"374","endLine":467,"endColumn":151},{"ruleId":"371","severity":1,"message":"415","line":471,"column":149,"nodeType":"373","messageId":"374","endLine":471,"endColumn":151},{"ruleId":"375","severity":1,"message":"437","line":17,"column":3,"nodeType":"377","messageId":"378","endLine":17,"endColumn":8},{"ruleId":"371","severity":1,"message":"415","line":58,"column":21,"nodeType":"373","messageId":"374","endLine":58,"endColumn":23},{"ruleId":"375","severity":1,"message":"440","line":93,"column":9,"nodeType":"377","messageId":"378","endLine":93,"endColumn":14},{"ruleId":"404","severity":1,"message":"405","line":93,"column":31,"nodeType":"406","messageId":"407","endLine":93,"endColumn":32,"suggestions":"453"},{"ruleId":"404","severity":1,"message":"409","line":93,"column":35,"nodeType":"406","messageId":"407","endLine":93,"endColumn":36,"suggestions":"454"},{"ruleId":"404","severity":1,"message":"411","line":93,"column":40,"nodeType":"406","messageId":"407","endLine":93,"endColumn":41,"suggestions":"455"},{"ruleId":"404","severity":1,"message":"413","line":93,"column":54,"nodeType":"406","messageId":"407","endLine":93,"endColumn":55,"suggestions":"456"},{"ruleId":"371","severity":1,"message":"372","line":94,"column":29,"nodeType":"373","messageId":"374","endLine":94,"endColumn":31},{"ruleId":"375","severity":1,"message":"437","line":17,"column":3,"nodeType":"377","messageId":"378","endLine":17,"endColumn":8},{"ruleId":"371","severity":1,"message":"415","line":58,"column":21,"nodeType":"373","messageId":"374","endLine":58,"endColumn":23},{"ruleId":"375","severity":1,"message":"440","line":93,"column":9,"nodeType":"377","messageId":"378","endLine":93,"endColumn":14},{"ruleId":"404","severity":1,"message":"405","line":93,"column":31,"nodeType":"406","messageId":"407","endLine":93,"endColumn":32,"suggestions":"457"},{"ruleId":"404","severity":1,"message":"409","line":93,"column":35,"nodeType":"406","messageId":"407","endLine":93,"endColumn":36,"suggestions":"458"},{"ruleId":"404","severity":1,"message":"411","line":93,"column":40,"nodeType":"406","messageId":"407","endLine":93,"endColumn":41,"suggestions":"459"},{"ruleId":"404","severity":1,"message":"413","line":93,"column":54,"nodeType":"406","messageId":"407","endLine":93,"endColumn":55,"suggestions":"460"},{"ruleId":"371","severity":1,"message":"372","line":94,"column":29,"nodeType":"373","messageId":"374","endLine":94,"endColumn":31},{"ruleId":"375","severity":1,"message":"420","line":7,"column":5,"nodeType":"377","messageId":"378","endLine":7,"endColumn":10},{"ruleId":"375","severity":1,"message":"421","line":10,"column":5,"nodeType":"377","messageId":"378","endLine":10,"endColumn":15},{"ruleId":"375","severity":1,"message":"422","line":11,"column":5,"nodeType":"377","messageId":"378","endLine":11,"endColumn":17},{"ruleId":"375","severity":1,"message":"423","line":12,"column":5,"nodeType":"377","messageId":"378","endLine":12,"endColumn":17},{"ruleId":"375","severity":1,"message":"424","line":13,"column":5,"nodeType":"377","messageId":"378","endLine":13,"endColumn":25},{"ruleId":"375","severity":1,"message":"425","line":14,"column":5,"nodeType":"377","messageId":"378","endLine":14,"endColumn":19},{"ruleId":"375","severity":1,"message":"426","line":15,"column":5,"nodeType":"377","messageId":"378","endLine":15,"endColumn":10},{"ruleId":"375","severity":1,"message":"427","line":16,"column":5,"nodeType":"377","messageId":"378","endLine":16,"endColumn":15},{"ruleId":"375","severity":1,"message":"428","line":17,"column":5,"nodeType":"377","messageId":"378","endLine":17,"endColumn":19},{"ruleId":"375","severity":1,"message":"429","line":18,"column":5,"nodeType":"377","messageId":"378","endLine":18,"endColumn":19},{"ruleId":"375","severity":1,"message":"392","line":19,"column":5,"nodeType":"377","messageId":"378","endLine":19,"endColumn":13},{"ruleId":"375","severity":1,"message":"430","line":25,"column":5,"nodeType":"377","messageId":"378","endLine":25,"endColumn":24},{"ruleId":"375","severity":1,"message":"396","line":1,"column":17,"nodeType":"377","messageId":"378","endLine":1,"endColumn":26},{"ruleId":"375","severity":1,"message":"461","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":17},{"ruleId":"375","severity":1,"message":"387","line":19,"column":3,"nodeType":"377","messageId":"378","endLine":19,"endColumn":7},{"ruleId":"375","severity":1,"message":"388","line":20,"column":3,"nodeType":"377","messageId":"378","endLine":20,"endColumn":13},{"ruleId":"375","severity":1,"message":"389","line":21,"column":3,"nodeType":"377","messageId":"378","endLine":21,"endColumn":11},{"ruleId":"375","severity":1,"message":"391","line":22,"column":3,"nodeType":"377","messageId":"378","endLine":22,"endColumn":12},{"ruleId":"375","severity":1,"message":"462","line":23,"column":3,"nodeType":"377","messageId":"378","endLine":23,"endColumn":7},{"ruleId":"375","severity":1,"message":"463","line":24,"column":3,"nodeType":"377","messageId":"378","endLine":24,"endColumn":8},{"ruleId":"375","severity":1,"message":"402","line":26,"column":3,"nodeType":"377","messageId":"378","endLine":26,"endColumn":6},{"ruleId":"375","severity":1,"message":"376","line":27,"column":3,"nodeType":"377","messageId":"378","endLine":27,"endColumn":6},{"ruleId":"375","severity":1,"message":"437","line":28,"column":3,"nodeType":"377","messageId":"378","endLine":28,"endColumn":8},{"ruleId":"375","severity":1,"message":"464","line":100,"column":5,"nodeType":"377","messageId":"378","endLine":100,"endColumn":8},{"ruleId":"465","severity":1,"message":"466","line":162,"column":11,"nodeType":"467","endLine":162,"endColumn":29},{"ruleId":"375","severity":1,"message":"399","line":4,"column":10,"nodeType":"377","messageId":"378","endLine":4,"endColumn":21},{"ruleId":"375","severity":1,"message":"468","line":4,"column":36,"nodeType":"377","messageId":"378","endLine":4,"endColumn":47},{"ruleId":"375","severity":1,"message":"469","line":6,"column":7,"nodeType":"377","messageId":"378","endLine":6,"endColumn":17},{"ruleId":"375","severity":1,"message":"470","line":13,"column":7,"nodeType":"377","messageId":"378","endLine":13,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":310,"column":27,"nodeType":"373","messageId":"374","endLine":310,"endColumn":29},{"ruleId":"375","severity":1,"message":"387","line":4,"column":10,"nodeType":"377","messageId":"378","endLine":4,"endColumn":14},{"ruleId":"375","severity":1,"message":"389","line":4,"column":16,"nodeType":"377","messageId":"378","endLine":4,"endColumn":24},{"ruleId":"375","severity":1,"message":"390","line":4,"column":26,"nodeType":"377","messageId":"378","endLine":4,"endColumn":35},{"ruleId":"375","severity":1,"message":"385","line":4,"column":37,"nodeType":"377","messageId":"378","endLine":4,"endColumn":46},{"ruleId":"375","severity":1,"message":"402","line":4,"column":48,"nodeType":"377","messageId":"378","endLine":4,"endColumn":51},{"ruleId":"375","severity":1,"message":"376","line":4,"column":53,"nodeType":"377","messageId":"378","endLine":4,"endColumn":56},{"ruleId":"375","severity":1,"message":"438","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":19},{"ruleId":"375","severity":1,"message":"471","line":3,"column":7,"nodeType":"377","messageId":"378","endLine":3,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":20,"column":35,"nodeType":"369","messageId":"370","endLine":20,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":22,"column":45,"nodeType":"373","messageId":"374","endLine":22,"endColumn":47},{"ruleId":"367","severity":1,"message":"368","line":20,"column":35,"nodeType":"369","messageId":"370","endLine":20,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":22,"column":45,"nodeType":"373","messageId":"374","endLine":22,"endColumn":47},{"ruleId":"367","severity":1,"message":"368","line":20,"column":35,"nodeType":"369","messageId":"370","endLine":20,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":22,"column":45,"nodeType":"373","messageId":"374","endLine":22,"endColumn":47},"no-native-reassign",["472"],"no-negated-in-lhs",["473"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Container' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'FormGroup' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'ps' is defined but never used.","'bgColor' is assigned a value but never used.","'Component' is defined but never used.","'isWhiteSpaceLike' is defined but never used.","'HTMLEditor' is assigned a value but never used.","'dataEncrypt' is defined but never used.","'github' is defined but never used.","'google' is defined but never used.","'Row' is defined but never used.","'isBlock' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["474","475"],"Unnecessary escape character: \\+.",["476","477"],"Unnecessary escape character: \\@.",["478","479"],"Unnecessary escape character: \\-.",["480","481"],"Expected '!==' and instead saw '!='.","Unnecessary escape character: \\/.",["482","483"],["484","485"],"'optionBoxItems' is assigned a value but never used.","'Badge' is defined but never used.","'CardFooter' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'Media' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'dataDecrypt' is defined but never used.","'def_Iv' is assigned a value but never used.","'def_Key' is assigned a value but never used.",["486","487"],["488","489"],"'FileBase64' is defined but never used.","'Radio' is defined but never used.","'querystring' is defined but never used.","'uid' is assigned a value but never used.","'regex' is assigned a value but never used.",["490","491"],["492","493"],["494","495"],["496","497"],["498","499"],["500","501"],["502","503"],["504","505"],["506","507"],["508","509"],["510","511"],["512","513"],["514","515"],["516","517"],["518","519"],["520","521"],["522","523"],["524","525"],["526","527"],["528","529"],"'InnerHTML' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'qid' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'genPassword' is defined but never used.","'newContent' is assigned a value but never used.","'rawHTML' is assigned a value but never used.","'algorithm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"530","fix":"531","desc":"532"},{"messageId":"533","fix":"534","desc":"535"},{"messageId":"530","fix":"536","desc":"532"},{"messageId":"533","fix":"537","desc":"535"},{"messageId":"530","fix":"538","desc":"532"},{"messageId":"533","fix":"539","desc":"535"},{"messageId":"530","fix":"540","desc":"532"},{"messageId":"533","fix":"541","desc":"535"},{"messageId":"530","fix":"542","desc":"532"},{"messageId":"533","fix":"543","desc":"535"},{"messageId":"530","fix":"544","desc":"532"},{"messageId":"533","fix":"545","desc":"535"},{"messageId":"530","fix":"546","desc":"532"},{"messageId":"533","fix":"547","desc":"535"},{"messageId":"530","fix":"548","desc":"532"},{"messageId":"533","fix":"549","desc":"535"},{"messageId":"530","fix":"550","desc":"532"},{"messageId":"533","fix":"551","desc":"535"},{"messageId":"530","fix":"552","desc":"532"},{"messageId":"533","fix":"553","desc":"535"},{"messageId":"530","fix":"554","desc":"532"},{"messageId":"533","fix":"555","desc":"535"},{"messageId":"530","fix":"556","desc":"532"},{"messageId":"533","fix":"557","desc":"535"},{"messageId":"530","fix":"558","desc":"532"},{"messageId":"533","fix":"559","desc":"535"},{"messageId":"530","fix":"560","desc":"532"},{"messageId":"533","fix":"561","desc":"535"},{"messageId":"530","fix":"562","desc":"532"},{"messageId":"533","fix":"563","desc":"535"},{"messageId":"530","fix":"564","desc":"532"},{"messageId":"533","fix":"565","desc":"535"},{"messageId":"530","fix":"566","desc":"532"},{"messageId":"533","fix":"567","desc":"535"},{"messageId":"530","fix":"568","desc":"532"},{"messageId":"533","fix":"569","desc":"535"},{"messageId":"530","fix":"570","desc":"532"},{"messageId":"533","fix":"571","desc":"535"},{"messageId":"530","fix":"572","desc":"532"},{"messageId":"533","fix":"573","desc":"535"},{"messageId":"530","fix":"574","desc":"532"},{"messageId":"533","fix":"575","desc":"535"},{"messageId":"530","fix":"576","desc":"532"},{"messageId":"533","fix":"577","desc":"535"},{"messageId":"530","fix":"578","desc":"532"},{"messageId":"533","fix":"579","desc":"535"},{"messageId":"530","fix":"580","desc":"532"},{"messageId":"533","fix":"581","desc":"535"},{"messageId":"530","fix":"582","desc":"532"},{"messageId":"533","fix":"583","desc":"535"},{"messageId":"530","fix":"584","desc":"532"},{"messageId":"533","fix":"585","desc":"535"},{"messageId":"530","fix":"586","desc":"532"},{"messageId":"533","fix":"587","desc":"535"},{"messageId":"530","fix":"588","desc":"532"},{"messageId":"533","fix":"589","desc":"535"},"removeEscape",{"range":"590","text":"591"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"592","text":"593"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"594","text":"591"},{"range":"595","text":"593"},{"range":"596","text":"591"},{"range":"597","text":"593"},{"range":"598","text":"591"},{"range":"599","text":"593"},{"range":"600","text":"591"},{"range":"601","text":"593"},{"range":"602","text":"591"},{"range":"603","text":"593"},{"range":"604","text":"591"},{"range":"605","text":"593"},{"range":"606","text":"591"},{"range":"607","text":"593"},{"range":"608","text":"591"},{"range":"609","text":"593"},{"range":"610","text":"591"},{"range":"611","text":"593"},{"range":"612","text":"591"},{"range":"613","text":"593"},{"range":"614","text":"591"},{"range":"615","text":"593"},{"range":"616","text":"591"},{"range":"617","text":"593"},{"range":"618","text":"591"},{"range":"619","text":"593"},{"range":"620","text":"591"},{"range":"621","text":"593"},{"range":"622","text":"591"},{"range":"623","text":"593"},{"range":"624","text":"591"},{"range":"625","text":"593"},{"range":"626","text":"591"},{"range":"627","text":"593"},{"range":"628","text":"591"},{"range":"629","text":"593"},{"range":"630","text":"591"},{"range":"631","text":"593"},{"range":"632","text":"591"},{"range":"633","text":"593"},{"range":"634","text":"591"},{"range":"635","text":"593"},{"range":"636","text":"591"},{"range":"637","text":"593"},{"range":"638","text":"591"},{"range":"639","text":"593"},{"range":"640","text":"591"},{"range":"641","text":"593"},{"range":"642","text":"591"},{"range":"643","text":"593"},{"range":"644","text":"591"},{"range":"645","text":"593"},{"range":"646","text":"591"},{"range":"647","text":"593"},[1939,1940],"",[1939,1939],"\\",[1943,1944],[1943,1943],[1948,1949],[1948,1948],[1962,1963],[1962,1962],[3158,3159],[3158,3158],[3180,3181],[3180,3180],[1535,1536],[1535,1535],[1557,1558],[1557,1557],[1771,1772],[1771,1771],[1775,1776],[1775,1775],[1780,1781],[1780,1780],[1794,1795],[1794,1794],[2352,2353],[2352,2352],[2356,2357],[2356,2356],[2361,2362],[2361,2361],[2375,2376],[2375,2375],[5286,5287],[5286,5286],[5290,5291],[5290,5290],[5295,5296],[5295,5295],[5309,5310],[5309,5309],[2347,2348],[2347,2347],[2351,2352],[2351,2351],[2356,2357],[2356,2356],[2370,2371],[2370,2370],[2346,2347],[2346,2346],[2350,2351],[2350,2350],[2355,2356],[2355,2355],[2369,2370],[2369,2369]]